
# TestOperation messages
to.start=Starting operation with content object [{0}] containing [{1}].
to.completed=Successfully completed operation.
to.content_typecast_failed=Failed to type cast content to [{0}]. Operation execution aborted.
to.error=Operation failed with exception [{0}]. Operation execution aborted.
to.failed=Operation failed, because [{0}] child executions failed and [{1}] child executions terminated with an error.
to.resolve_dns_info=DNS resolution test: {0}
to.stickyness_info=HTTP session stickyness test: {0}
to.loadbalancing_info=HTTP session load balancing test: {0}
to.redirect_info=HTTP redirect test: {0}
to.statuscode_info=HTTP status code test: {0}
to.header_info=HTTP header test: {0}
to.tcp_connection_info=TCP connection test: {0}
to.http_info=HTTP test: {0}

# TestResponsePropertiesCommand messages
trp.start=Starting response properties test on a HTTP result set.
trp.completed=Successfully completed response properties test on a HTTP result set.
trp.zero_size_sequence_info=Testing whether HTTP result set size is zero.
trp.zero_size_sequence_succeed=Successfully completed response properties test, test defaulted to successful as the HTTP result set was empty.
trp.zero_size_set_failed=HTTP result set size is not zero, will continue test.
trp.succeed=Successfully completed test of HTTP result set with [{0}] HTTP result sequences.
trp.failed=Test failed, because [{0}] child tests failed and [{1}] child tests terminated with an error.
trp.intra_sequence_info=Testing [{0}] with [{1}] on [{2}].
trp.inter_sequence_info=Testing [{0}] with [{1}] on [{2}].

# TestHttpCommand messages
thc.start=Starting HTTP test.
thc.completed=Successfully completed HTTP test.
thc.invoke_http_get=Sending HTTP Requests.
thc.invoke_responseprops_test=Testing received HTTP responses.
thc.succeed=Successfully completed HTTP test.
thc.failed=Test failed, because [{0}] child tests failed and [{1}] child tests terminated with an error.

# TestDnsResolutionCommand messages
tdrc.start=Starting forward and reverse DNS test.
tdrc.completed=Successfully completed forward and reverse DNS test.
tdrc.succeed=Successfully completed forward and reverse DNS test.
tdrc.failed=Test failed, because [{0}] child tests failed and [{1}] child tests terminated with an error.
tdrc.assert_forward_dns_info=Forward DNS lookup test. Resolving host name {0} to IP address {1}.  
tdrc.assert_reverse_dns_info=Reverse DNS lookup test. Resolving IP address {0} to host name {1}.
tdrc.assert_forward_dns_unknown_ip_info=Forward DNS lookup test. Resolving host name {0} to an IP address.

# TestDnsForwardResolutionCommand messages
tdfrc.start=Starting forward DNS test.
tdfrc.completed=Successfully completed forward DNS test.
tdfrc.succeed=Successfully completed forward DNS test.
tdfrc.failed=Test failed, because [{0}] child tests failed and [{1}] child tests terminated with an error.
tdfrc.assert_forward_dns_info=Forward DNS lookup test. Resolving host name {0} to IP address {1}.  

# TestDnsReverseResolutionCommand messages
tdrrc.start=Starting reverse DNS test.
tdrrc.completed=Successfully completed reverse DNS test.
tdrrc.succeed=Successfully completed reverse DNS test.
tdrrc.failed=Test failed, because [{0}] child tests failed and [{1}] child tests terminated with an error. 
tdrrc.assert_reverse_dns_info=Reverse DNS lookup test. Resolving IP address {0} to host name {1}.

# TestUncPathCommand
tupc.start=Starting UNC path test.
tupc.completed=Successfully completed UNC path test.
tupc.succeed=Successfully accessed UNC path [{0}].
tupc.failed=Test failed, couldn't access UNC path [{0}].

# InvokeHttpGetMethodCommand messages
ihgc.start=Starting HTTP Get command.
ihgc.completed=Successfully completed HTTP Get command.
ihgc.command_succeed=Successfully completed HTTP Get command, creating [{0}] HTTP result sequences.
ihgc.followredirects_info=HTTP follow redirects
ihgc.tcpsockettimeout_info=TCP Socket timeout
ihgc.proxy_info=Proxy
ihgc.urls_info=URL(s)
ihgc.parse_xml_start=Starting to parse response as XML. 
ihgc.parse_xml_success=Successfully parsed response as XML.
ihgc.parse_xml_start=Starting to parse response as XML.
ihgc.parse_xml_error=Failed to parse response as XML due to exception {0}

# TestTcpConnectionCommand messages
ttcc.start=Starting TCP connection test.
ttcc.completed=Successfully completed TCP connection test.
ttcc.zero_size_ports_info=Testing whether TCP port list is empty.
ttcc.zero_size_ports_succeed=Successfully completed TCP connection test, test defaulted to successful as the port list was empty.
ttcc.assert_host_info=TCP connection test to: {0}:{1}
ttcc.succeed=Successfully completed TCP connection test.
ttcc.failed=Test failed, because [{0}] child tests failed and [{1}] child tests terminated with an error.
ttcc.assert_forward_dns_info=Forward DNS lookup test. Resolving host name {0} to IP address.

# TestCaseAssertionConfigurations messages
tcac.redirect_prop_statuscode=HTTP Status Code
tcac.redirect_prop_redirect_header=HTTP Header for redirection
tcac.header_prop_statuscode=HTTP Status Code
tcac.header_prop_expected_headers=Expected HTTP Headers
tcac.header_prop_nonexpected_headers=Non expected HTTP Headers
tcac.stickyness_prop_servers=Servers property
tcac.stickyness_prop_environment=Environment property
tcac.stickyness_prop_host=Host property
tcac.stickyness_prop_location=Location property
tcac.stickyness_prop_statuscode=HTTP Status Code
tcac.stickyness_prop_cookies=HTTP Cookies
tcac.loadbalancing_prop_servers=Servers property
tcac.loadbalancing_prop_environment=Environment property
tcac.loadbalancing_prop_host=Host property
tcac.loadbalancing_prop_location=Location property
tcac.loadbalancing_prop_statuscode=HTTP Status Code
tcac.loadbalancing_prop_cookies=HTTP Cookies
tcac.statuscode_prop_statuscode=HTTP Status Code

