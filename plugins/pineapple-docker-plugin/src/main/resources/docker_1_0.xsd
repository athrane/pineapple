<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
		   xmlns="http://pineapple.dev.java.net/ns/plugin/docker_1_0" 
		   targetNamespace="http://pineapple.dev.java.net/ns/plugin/docker_1_0" 
		   elementFormDefault="qualified" 
		   attributeFormDefault="unqualified">

	<xs:element name="docker" >
		<xs:annotation>
			<xs:documentation>Remote Docker daemon.</xs:documentation>
		</xs:annotation>	
		<xs:complexType >
			<xs:sequence>
				<xs:choice  minOccurs="0" maxOccurs="unbounded" >							
					<xs:element name="image" type="imageType" />
					<xs:element name="image-from-dockerfile" type="imageFromDockerfileType" />				
					<xs:element name="tagged-image" type="taggedImageType" />				
					<xs:element name="container" type="containerType" />				
				 </xs:choice>
				<xs:element name="container-configuration" type="containerConfigurationType" minOccurs="0" maxOccurs="unbounded" />				
			</xs:sequence>								
		</xs:complexType>
	</xs:element>

	<xs:complexType abstract="true" name="commandType">
		<xs:annotation>
			<xs:documentation>Abstract Pineapple Docker command.</xs:documentation>
		</xs:annotation>				
	</xs:complexType>
				
	<xs:complexType name="imageType">
		<xs:annotation>
			<xs:documentation>Docker image.</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="commandType"> 
				<xs:attribute name="repository" type="xs:string" use="required"/>
				<xs:attribute name="tag" type="xs:string" use="optional" default="latest"/>
			</xs:extension> 
		</xs:complexContent> 				
	</xs:complexType>

	<xs:complexType name="taggedImageType">
		<xs:annotation>
			<xs:documentation>Tagged Docker image.</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="commandType"> 
				<xs:sequence>
					<xs:element name="source-image" type="imageType" />
					<xs:element name="target-image" type="imageType" />
				</xs:sequence>			
			</xs:extension> 
		</xs:complexContent> 				
	</xs:complexType>

	<xs:complexType name="imageFromDockerfileType">
		<xs:annotation>
			<xs:documentation>Docker image built from Docker file.</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="commandType"> 
				<xs:sequence>
					<xs:element name="target-image" type="imageType" />
				</xs:sequence>			
				<xs:attribute name="source-directory" type="xs:string" use="required"/>
				<xs:attribute name="pull-image" type="xs:boolean" use="optional" default="false"/>				
			</xs:extension> 
		</xs:complexContent> 				
	</xs:complexType>

	<xs:complexType name="containerType">
		<xs:annotation>
			<xs:documentation>Docker container.</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="commandType"> 
				<xs:sequence>
					<xs:element name="image" type="imageType" minOccurs="1" maxOccurs="1" />
					<xs:element name="configuration" type="embeddedContainerConfigurationType" minOccurs="0" maxOccurs="1" />
				</xs:sequence>			
				<!-- Pineapple name for container -->
				<xs:attribute name="name" type="xs:string" use="required" />				
				<xs:attribute name="state" type="commandControlState" use="optional" default="running"/>								
			</xs:extension> 			
		</xs:complexContent> 				
	</xs:complexType>

	<xs:complexType name="embeddedContainerConfigurationType">
		<xs:annotation>
			<xs:documentation>Docker container configuration embedded in container definition.</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="abstractContainerConfigurationType"> 			
				<!-- reference to defined container configuration -->
				<xs:attribute name="ref" type="xs:string" use="optional"/>		
			</xs:extension> 
		</xs:complexContent> 				
	</xs:complexType>

	<xs:complexType name="containerConfigurationType">
		<xs:annotation>
			<xs:documentation>Docker container configuration referenced by container.</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="abstractContainerConfigurationType"> 
				<!-- container configuration ID used to reference it from a embedded configuration -->			
				<xs:attribute name="id" type="xs:ID" use="required"/>		
			</xs:extension> 
		</xs:complexContent> 				
	</xs:complexType>

	<xs:complexType name="abstractContainerConfigurationType">
		<xs:annotation>
			<xs:documentation>Docker base container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="cmd" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="entrypoint" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="env" type="containerConfigurationEnvironmentVariablesType" minOccurs="0" maxOccurs="1" />
			<xs:element name="exposed-ports" type="containerConfigurationExposedPortsType" minOccurs="0" maxOccurs="1" />	
			<xs:element name="host-config" type="containerConfigurationHostConfigType" minOccurs="0" maxOccurs="1" />						
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="on-build" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="volumes" type="containerConfigurationVolumesType" minOccurs="0" maxOccurs="1" />														
		</xs:sequence>				
		<xs:attribute name="attach-stderr" type="xs:boolean" use="optional" />		
		<xs:attribute name="attach-stdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attach-stdout" type="xs:boolean" use="optional"/>		
		<xs:attribute name="domainname" type="xs:string" use="optional"/>				
		<xs:attribute name="hostname" type="xs:string" use="optional"/>		
		<xs:attribute name="mac-address" type="xs:string" use="optional"/>		
		<xs:attribute name="network-disabled" type="xs:boolean" use="optional"/>				
		<xs:attribute name="open-stdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="stdin-once" type="xs:boolean" use="optional"/>		
		<xs:attribute name="tty" type="xs:boolean" use="optional"/>				
		<xs:attribute name="user" type="xs:string" use="optional"/>		
		<xs:attribute name="working-dir" type="xs:string" use="optional"/>								
	</xs:complexType>

	<xs:complexType name="containerConfigurationEnvironmentVariablesType" >
		<xs:annotation>
			<xs:documentation>Definition of a environment variables in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="variable" type="containerConfigurationEnvironmentVariableType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationEnvironmentVariableType">
		<xs:annotation>
			<xs:documentation>Definition of a environment variable in container configuration.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" />								
		<xs:attribute name="value" type="xs:string" />								
	</xs:complexType>

	<xs:complexType name="containerConfigurationLabelsType" >
		<xs:annotation>
			<xs:documentation>Definition of labels in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="label" type="containerConfigurationLabelType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationLabelType">
		<xs:annotation>
			<xs:documentation>Definition of a label in container configuration.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="key" type="xs:string" />								
		<xs:attribute name="value" type="xs:string" />								
	</xs:complexType>

	<xs:complexType name="containerConfigurationExposedPortsType" >
		<xs:annotation>
			<xs:documentation>Info about exposed ports in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="port" type="containerConfigurationExposedPortType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationExposedPortType">
		<xs:annotation>
			<xs:documentation>Exposed TCP or UDP port in container configuration.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="value" type="ipPortInteger" />								
		<xs:attribute name="type" type="ipPort" />									
	</xs:complexType>

	<xs:complexType name="containerConfigurationVolumesType" >
		<xs:annotation>
			<xs:documentation>Info about volume in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="volume" type="containerConfigurationVolumeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationVolumeType">
		<xs:annotation>
			<xs:documentation>Volume in container configuration.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="mountpoint" type="xs:string" />								
	</xs:complexType>

	<xs:simpleType name="stringList">
  		<xs:list itemType="xs:string"/>
	</xs:simpleType>
							
	<xs:complexType name="containerConfigurationHostConfigType" >
		<xs:annotation>
			<xs:documentation>Info about host configuration in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="binds" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="dns" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="dns-search" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="extra-hosts" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="group-add" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="links" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="log-config" type="containerConfigurationHostConfigLogConfigType" minOccurs="0" maxOccurs="1" />
			<xs:element name="port-bindings" type="containerConfigurationHostConfigPortBindingsType" minOccurs="0" maxOccurs="1" />				
			<xs:element name="restart-policy" type="containerConfigurationHostConfigRestartPolicyType" minOccurs="0" maxOccurs="1" />
			<xs:element name="security-opt" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="volumes-from" type="stringList" minOccurs="0" maxOccurs="1" />	
 		</xs:sequence>
		<xs:attribute name="cap-add" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="cap-drop" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="cgroup-parent" type="xs:string" use="optional"/> 						
		<xs:attribute name="cpu-shares" type="xs:long" use="optional"/>				
		<xs:attribute name="cpu-period" type="xs:long" use="optional"/>				
		<xs:attribute name="cpuset-cpus" type="xs:string" use="optional"/>				
		<xs:attribute name="cpuset-mems" type="xs:string" use="optional"/>																							
		<xs:attribute name="devices" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="lxc-conf" type="xs:string" use="optional"/> <!-- wrong type -->
		<xs:attribute name="memory" type="xs:long" use="optional"/>		
		<xs:attribute name="memory-swap" type="xs:long" use="optional"/>				
		<xs:attribute name="network-mode" type="xs:string" use="optional"/>		
		<xs:attribute name="privileged" type="xs:boolean" use="optional"/>				
		<xs:attribute name="publish-all-ports" type="xs:boolean" use="optional"/>		
		<xs:attribute name="readonly-rootfs" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="ulimits" type="xs:string" use="optional"/> <!-- wrong type -->						
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigPortBindingsType" >
		<xs:annotation>
			<xs:documentation>Port bindings configuration in host configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="bind" type="containerConfigurationHostConfigPortBindingType" minOccurs="0" maxOccurs="unbounded" />
 		</xs:sequence>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigPortBindingType" >
		<xs:annotation>
			<xs:documentation>Port binding configuration in host configuration.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="container-port" type="ipPortInteger" use="required" />								
		<xs:attribute name="host-port" type="ipPortInteger" use="required" />									
		<xs:attribute name="type" type="ipPort" use="required" />												
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigLogConfigType" >
		<xs:annotation>
			<xs:documentation>Log configuration in host configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="config" type="containerConfigurationHostConfigLogConfigConfigType" />
 		</xs:sequence>		
		<xs:attribute name="type" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigLogConfigConfigType" >
		<xs:annotation>
			<xs:documentation>Log configuration in host configuration.</xs:documentation>
		</xs:annotation>
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigRestartPolicyType" >
		<xs:annotation>
			<xs:documentation>Restart policy configuration in host configuration.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="maximum-retry-count" type="restartCountInteger" use="required"/>		
		<xs:attribute name="name" type="restartAlgorithms" use="required"/>		
	</xs:complexType>

	<xs:simpleType name="commandControlState">
		<xs:annotation>
			<xs:documentation>
			Supported container states. 
			https://docs.docker.com/reference/api/docker_remote_api/#docker-events
			</xs:documentation>
		</xs:annotation>	
  		<xs:restriction base="xs:string">
    		<xs:enumeration value="running" />
    		<xs:enumeration value="stopped" />
    		<xs:enumeration value="paused" />    		
		</xs:restriction>
	</xs:simpleType>							

	<xs:simpleType name="ipPort">
  		<xs:restriction base="xs:string">
    		<xs:enumeration value="tcp" />
    		<xs:enumeration value="udp" />
		</xs:restriction>
	</xs:simpleType>							

	<xs:simpleType name="ipPortInteger">
    	<xs:restriction base="xs:integer">
      		<xs:minInclusive value="1"/>
      		<xs:maxInclusive value="65535"/>
    	</xs:restriction>
  	</xs:simpleType>

	<xs:simpleType name="restartCountInteger">
    	<xs:restriction base="xs:integer">
      		<xs:minInclusive value="0"/>
      		<xs:maxInclusive value="1000000"/>
    	</xs:restriction>
  	</xs:simpleType>

	<xs:simpleType name="restartAlgorithms">
  		<xs:restriction base="xs:string">
    		<xs:enumeration value="always" />
    		<xs:enumeration value="on-failure" />
		</xs:restriction>
	</xs:simpleType>							

</xs:schema>
