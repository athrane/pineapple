<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:context="http://www.springframework.org/schema/context"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    		http://www.springframework.org/schema/oxm 
    		http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
    		http://www.springframework.org/schema/context 
    		http://www.springframework.org/schema/context/spring-context-3.0.xsd" >    		

	<!-- Configures pineapple-api -->
	<import resource="classpath:com.alpha.pineapple.api-config.xml" />

	<!-- Configures pineapple-commands-api -->
	<import resource="classpath:com.alpha.pineapple.commands-api-config.xml" />

	<!-- Configures pineapple-docker-support -->
	<import resource="classpath:com.alpha.pineapple.docker-config.xml" />
        
	<!-- enable annotation based configuration / dependency injection -->
	<context:annotation-config />
    
	<oxm:jaxb2-marshaller id="unmarshaller" contextPath="com.alpha.pineapple.plugin.docker.model"/>

	<!-- define message provider for internationalization  -->
	<bean id="messageProvider" class="com.alpha.pineapple.i18n.PropertyFileMessageProviderImpl">
    	<property name="basename" value="com.alpha.pineapple.plugin.docker-messages"/>
	</bean>	
	    	    
	<!-- define model mapper -->
	<bean id="mapper" class="com.alpha.pineapple.plugin.docker.model.MapperImpl" />
	<bean id="dockerPluginJaxbGetterMethodMatcher" class="com.alpha.pineapple.plugin.docker.model.jaxb.reflection.JaxbGetterMethodMatcherImpl" />
			
 	<!-- 
 		definitions used by the integration tests. 
 		Only available for test with @ActiveProfiles("integration-test") 
 	-->
	<beans profile="integration-test" >
		<bean id="deployConfiguration" class="com.alpha.pineapple.plugin.docker.operation.DeployConfiguration" />		
		<bean id="undeployConfiguration" class="com.alpha.pineapple.plugin.docker.operation.UndeployConfiguration" />		
		<bean id="testOperation" class="com.alpha.pineapple.plugin.docker.operation.TestOperation" />				
		<bean id="coreRuntimeDirectoryProvider" class="org.easymock.EasyMock" factory-method="createMock">
			<constructor-arg value="com.alpha.pineapple.io.file.RuntimeDirectoryProvider"/>
		</bean>
	</beans>	
		    	    
</beans>