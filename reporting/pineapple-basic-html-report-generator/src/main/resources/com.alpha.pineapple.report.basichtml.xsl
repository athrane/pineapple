<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" 
	xmlns:rbh="http://pineapple.dev.java.net/ns/report/basic_html_1_0" >
	<xsl:output method="html" indent="yes" encoding="UTF-8"
		doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" />
	<xsl:decimal-format decimal-separator="."
		grouping-separator="," />

	<xsl:template match="rbh:report">
		<html>
			<head>
				<title>Pineapple operation report</title>

				<style type="text/css">

					<!-- format for body -->
					body {
					font:normal 68% verdana,arial,helvetica;
					color:#000000;
					}
					table
					tr td, table tr th {
					font-size: 68%;
					}

					<!-- format for details report section headers -->
					table.sectionHeaders tr th{
					font-size: 110%;
					font-weight: bold;
					text-align:left;
					background:#D0D0DC;
					}

					<!-- original table background: #a6caf0, 3CB371 -->
					<!-- format for details table headers -->
					table.details tr th{
					font-weight: bold;
					text-align:left;
					background:#F0F0EC;
					}

					<!-- original table background: #eeeee0 -->
					<!-- http://www.dbeat.com/colorsonwhite.htm -->
					<!-- format for details table rows -->
					table.details tr td{
					background:#FAFAD2;
					}

					<!-- original table background: #C0DCC0 -->
					<!-- format for tables with contains an header -->
					table.headers tr th{
					font-size: 70%;
					font-weight: bold;
					background:#E8E8F8;
					text-align:left;
					}

					<!-- original table background: #a6caf0, 3CB371 -->
					<!-- format for details table headers -->
					table.messagevalues tr th{
					font-weight: bold;
					text-align:left;
					}

					<!-- original table background: #eeeee0 -->
					<!-- http://www.dbeat.com/colorsonwhite.htm -->
					<!-- format for details table rows -->
					table.messagevalues tr td{
					background:#FCFCE0;
					}



					p {
					line-height:1.5em;
					margin-top:0.5em; margin-bottom:1.0em;
					}
					h1 {
					margin: 0px 0px 5px; font: 165% verdana,arial,helvetica
					}
					h2 {
					margin-top: 1em; margin-bottom: 0.5em; font: bold 125%
					verdana,arial,helvetica
					}
					h3 {
					margin-bottom: 0.5em; font: bold 115%
					verdana,arial,helvetica
					}
					h4 {
					margin-bottom: 0.5em; font: bold 100%
					verdana,arial,helvetica
					}
					h5 {
					margin-bottom: 0.5em; font: bold 100%
					verdana,arial,helvetica
					}
					h6 {
					margin-bottom: 0.5em; font: bold 100%
					verdana,arial,helvetica
					}
					.Error {
					font-weight:bold; color:red;
					}
					.Failure {
					font-weight:bold; color:purple;
					}
				</style>
			</head>
			<body>
				<a name="top"></a>

				<!-- construct page header -->
				<xsl:call-template name="pageHeader" />

				<!-- construct module overview -->
				<xsl:call-template name="moduleSection" />
				<br />

				<!-- for each model construct info -->
				<xsl:call-template name="moduleModelsSection" />
				<br />

				<!-- For each execution result construct details -->
				<xsl:call-template name="executionResultsSection" />
			</body>
		</html>
	</xsl:template>


	<!-- Writes HTML page header. -->
	<xsl:template name="pageHeader">
		<h1>Pineapple Report</h1>
		<table width="100%">
			<tr>
				<td align="right">
					Generated by the HTML report generator from the
					<a href='https://github.com/athrane/pineapple'>Pineapple</a>
					project.
				</td>
			</tr>
		</table>
		<hr size="1" />
	</xsl:template>

	<!-- Writes module section. -->
	<xsl:template name="moduleSection">

		<table class="sectionHeaders" border="0" cellpadding="5"
			cellspacing="2" width="100%">
			<tr valign="top">
				<th>Module</th>
			</tr>
		</table>

		<!-- Write basic module properties -->
		<xsl:for-each select="/rbh:report/rbh:result/rbh:messages/rbh:message">
			<table border="0" width="95%">
				<tr>
					<th align="left">
						<xsl:value-of select="@name" />:
					</th>
				</tr><!-- list all message values -->
				<xsl:for-each select="rbh:value">
					<tr>
						<td align="left">
							<xsl:value-of select="@value" />
						</td>
					</tr>
				</xsl:for-each>
			</table>
		</xsl:for-each>
	</xsl:template>

	<!-- Formats and render value as time. -->
	<xsl:template name="display-time">
		<xsl:param name="value" />
		<xsl:value-of select="format-number($value,'0')" />
	</xsl:template>

	<!-- Formats and render value as percent. -->
	<xsl:template name="display-percent">
		<xsl:param name="value" />
		<xsl:value-of select="format-number($value,'0.00%')" />
	</xsl:template>

	<!-- Writes section for all module models. -->
	<xsl:template name="moduleModelsSection">

		<!-- Write module models summary table -->
		<table class="details" border="0" cellpadding="5" cellspacing="2"
			width="80%">
			<tr valign="top">
				<th width="70%">Model(s)</th>
				<th>Children</th>
				<th>Errors</th>
				<th>Failures</th>
				<th nowrap="nowrap">Start</th>
				<th nowrap="nowrap">Time(ms)</th>
			</tr>

			<!-- list all models recursively -->
			<xsl:for-each select="//rbh:result[@type='model']">
				<xsl:variable name="executionsCount" select="sum(@children)" />
				<xsl:variable name="failureCount" select="sum(@failures)" />
				<xsl:variable name="errorCount" select="sum(@errors)" />
				<xsl:variable name="timeCount" select="sum(@time)" />

				<!-- write a summary for the model -->
				<tr valign="top">
					<!-- set a nice color depending if there is an error/failure -->
					<xsl:attribute name="class">
                    <xsl:choose>
                        <xsl:when test="$failureCount &gt; 0">Failure</xsl:when>
                        <xsl:when test="$errorCount &gt; 0">Error</xsl:when>
                    </xsl:choose>
                </xsl:attribute>
					<td>
						<a href="#{@reportId}">
							<xsl:value-of select="@description" />
						</a>
					</td>
					<td>
						<xsl:value-of select="$executionsCount" />
					</td>
					<td>
						<xsl:value-of select="$errorCount" />
					</td>
					<td>
						<xsl:value-of select="$failureCount" />
					</td>
					<td>
							<xsl:value-of select="@startTime" />
					</td>
					<td>
						<xsl:call-template name="display-time">
							<xsl:with-param name="value" select="$timeCount" />
						</xsl:call-template>
					</td>
				</tr>
			</xsl:for-each>
		</table>

		<br />
		<table class="sectionHeaders" border="0" cellpadding="5"
			cellspacing="2" width="100%">
			<tr valign="top">
				<th>Model(s)</th>
			</tr>
		</table>

		<!-- Write details for each module model -->
		<xsl:for-each select="//rbh:result[@type='model']">

			<!-- create an anchor for this module model -->
			<a name="{@reportId}"></a>

			<table class="headers" border="0" cellpadding="5" cellspacing="2"
				width="95%">
				<tr>
					<th align="left">
						<xsl:value-of select="@description" />
					</th>
				</tr>
			</table>

			<!-- create table with properties -->
			<xsl:for-each select="rbh:messages/rbh:message">
				<table border="0" width="95%">
					<tr>
						<th align="left">
							<xsl:value-of select="@name" />:
						</th>
					</tr><!-- list all message values -->
					<xsl:for-each select="rbh:value">
						<tr>
							<td align="left">
								<xsl:value-of select="@value" />
							</td>
						</tr>
					</xsl:for-each>
				</table>
			</xsl:for-each>

			<!-- create table with direct children -->
			<table class="details" border="0" cellpadding="5" cellspacing="2"
				width="80%">
				<tr valign="top">
					<th width="70%">Name</th>
					<th>Status</th>
					<th>Children</th>
					<th>Errors</th>
					<th>Failures</th>
					<th nowrap="nowrap">Start</th>
					<th nowrap="nowrap">Time(ms)</th>
				</tr>
				<!-- match the results for this model -->
				<xsl:apply-templates select="rbh:result[@type='default']"
					mode="print.child.result" />
			</table>
			<br />
		</xsl:for-each>

		<hr size="1" />

	</xsl:template>

	<!-- Table content for child executions table in module model section -->
	<xsl:template match="rbh:result" mode="print.child.result">
		<tr valign="top">
			<!-- set a nice color depending if there is an error/failure -->
			<xsl:attribute name="class">
            <xsl:choose>
                <xsl:when test="contains(@state,'FAILURE')">Failure</xsl:when>
                <xsl:when test="contains(@state,'ERROR')">Error</xsl:when>
            </xsl:choose>
        </xsl:attribute>
			<td>
				<a href="#{@reportId}">
					<xsl:value-of select="@description" />
				</a>
			</td>
			<xsl:choose>
				<xsl:when test="contains(@state,'FAILURE')">
					<td>Failure</td>
				</xsl:when>
				<xsl:when test="contains(@state,'ERROR')">
					<td>Error</td>
				</xsl:when>
				<xsl:otherwise>
					<td>Success</td>
				</xsl:otherwise>
			</xsl:choose>
			<td>
				<xsl:value-of select="@children" />
			</td>
			<td>
				<xsl:value-of select="@errors" />
			</td>
			<td>
				<xsl:value-of select="@failures" />
			</td>
			<td>
				<xsl:value-of select="@startTime" />
			</td>
			<td>
				<xsl:call-template name="display-time">
					<xsl:with-param name="value" select="@time" />
				</xsl:call-template>
			</td>
		</tr>
	</xsl:template>

	<!-- Writes models details section for all execution results. -->
	<xsl:template name="executionResultsSection">

		<table class="sectionHeaders" border="0" cellpadding="5"
			cellspacing="2" width="100%">
			<tr valign="top">
				<th>Execution Result(s)</th>
			</tr>
		</table>

		<!-- write out all execution results -->
		<xsl:for-each select="//rbh:result[@type='default']">
			<xsl:variable name="resultMessage"
				select="rbh:messages/rbh:message[@name='Message']/rbh:value[1]/@value" />

			<!-- create an anchor to this execution result name -->
			<a name="{@reportId}"></a>

			<!-- create table with properties -->
			<table class="headers" border="0" cellpadding="5" cellspacing="2"
				width="95%">
				<tr>
					<th align="left">
						<xsl:value-of select="@description" />
					</th>
				</tr>

				<!-- create table with properties -->
				<xsl:for-each select="rbh:messages/rbh:message">
					<table border="0" width="95%">
						<tr>
							<th align="left">
								<xsl:value-of select="@name" />:
							</th>
						</tr><!-- list all message values -->
						<xsl:for-each select="rbh:value">
							<tr>
								<td align="left">
									<xsl:value-of select="@value" />
								</td>
							</tr>
						</xsl:for-each>
					</table>
				</xsl:for-each>

			</table>

			<xsl:choose>
				<xsl:when test="@children &gt; 0">
					<table class="details" border="0" cellpadding="5"
						cellspacing="2" width="80%">
						<tr valign="top">
							<th width="70%">Name</th>
							<th>Status</th>
							<th>Children</th>
							<th>Errors</th>
							<th>Failures</th>
							<th nowrap="nowrap">Start</th>
							<th nowrap="nowrap">Time(ms)</th>
						</tr>
						<!-- match the results for this execution result -->
						<xsl:apply-templates select="rbh:result[@type='default']"
							mode="print.child.result" />
					</table>
				</xsl:when>
				<xsl:otherwise>
					<table width="100%">
						<tr>
							<td align="left"></td>
						</tr>
					</table>
				</xsl:otherwise>
			</xsl:choose>

			<a href="#top">Back to top</a>
			<p />
			<p />

		</xsl:for-each>
	</xsl:template>

</xsl:stylesheet>

