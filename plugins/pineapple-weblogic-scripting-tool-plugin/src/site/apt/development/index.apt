 ------
 Development documentation
 ------
 Allan Thrane Andersen 
 ------
 April 2011
 ------

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

Development documentation

* Schema location

	The schema is located in the folder: <<<src/main/resources.>>>

** Adding the schemas to the main project web site

	During the <<<site>>> phase the schema is copied to the main site in the 
	<<<pineapple-project>>>. The schema is copied to the directory: <<</ns/plugin>>>.
	
	This is implemented in the <<<pom.xml>>> for the <<<pineapple-weblogic-installation-plugin>>> project. 

* Generation of classes from XML schemas

	The project uses JABX through the Maven 2 plugin <<<maven-jaxb2-plugin>>> 
	to generate classes from XML schemas.		
	 	
** Customized package names
	 	
	The generated classes are mapping into the package 
	<<<com.alpha.pineapple.plugin.weblogic.installation.model>>> using the JAXB bindings file at:
	<<<src/main/resources/bindings.xjb>>>.

** Customized type names
	
	The JAXB bindings file also defines mappings of Schema type into
	Java types. The applied rule is to remove the postfixed <<<Type>>>
	from the Schema type in the corresponding Java types, i.e. from the 
	schema type named <<<NiceType>>> a Java type named <<<Nice>>> is 
	generated by JAXB.     

** JAXB Links

	More information about JAXB can be found	
	{{{https://jaxb.dev.java.net/}here.}}
	
	More information about <<<maven-jaxb2-plugin>>> can be found	
	{{{https://maven-jaxb2-plugin.dev.java.net/}here.}}	



* Internal configuration

** Logging

	The project uses Log4j for logging. 
	
	The project provides a Log4j configuration as part of its
	production build. A log4j configuration file is defined in the project 
	in the directory <<<src/java/resources/log4.properties>>> for use
	by dependent projects as part of their test configuration. 
	
	The test configuration configures Log4j to write these log files 
	to $\{user.home}/.pineapple/logs/:
	
	* pineapple-test.log � unit test log from pineapple classes
	
	* pineapple-root-test.log � unit test log from all packages

** Spring configuration file 

	The plugin contains a configuration file which defines a Spring 
	application context. The Spring application context defines the 
	input unmarshalling for the plugin. The file is located in 
	<<<src/main/resources/com.alpha.pineapple.plugin.weblogic.installation-config.xml>>>.
	
** Internationalization (I18N) configuration file 

	The report generator uses internationalization. Messages 
	used by classes in the project are located in the file
	<<<src/main/resources/com.alpha.pineapple.plugin.weblogic.installation-messages.properties>>>.		 

** JAXB binding file 

	JAXB bindings file used during generation of model objects from 
	the plugin schema is located at <<<src/main/resources/bindings.xjb>>>.

* Test 

** Unit test

	The <<<ObjectMotherContent>>> helper class is used to create 
	models for unit tests.
	
** Integration test

	Commonly used constants in the integration tests are defined in the class
	<<<com.alpha.testutils.WSPIntTestConstants>>>.

	Integration tests for the project are placed in the same packages as 
	the unit tests. The integration tests are postfixed with 
	<<<IntegrationTest>>> where the unit test have the postfix <<<Test>>>.
		
*** The alphadomain integration test domain
	
	The integration tests requires the existence of a WebLogic 12.x installation in
	<<<C:/Oracle/Middleware/wlserver_12.1>>> on Windows.	
	
* Implementation

** Plugin class

	The package <<<com.alpha.pineapple.plugin.weblogic.scriptingtool>>> is the root
	package of the plugin and contains the plugin class <<<PluginImpl>>>. 
	
** Session class

	The package <<<com.alpha.pineapple.plugin.weblogic.scriptingtool.session>>> contains
	the session class for the plugin:
	
	* <<<WlstSessionImpl>>> extends the <<<DefaultSessionImpl>>>
	class which implements basic access to the resource meta data. 
		
	[]

** Operation classes

	The package <<<com.alpha.pineapple.plugin.weblogic.scriptingtool>>> contains
	the operation classes for the plugin.
	
	The plugin implement these default operations: 
	
	* <<<DeployConfiguration>>> implements the operation <<<deploy-configuration>>>.	
	
	* <<<UndeployConfiguration>>> implements the operation <<<undeploy-configuration>>>.	
		
	[]
		
** Model helper classes

	None implemented, as the model is very small.	
		 		
** Helper classes
	
	The package <<<com.alpha.pineapple.plugin.weblogic.scriptingtool.argument>>> contains
	a helper class named <<<ArgumentBuilder>>> for creation of the argument list for WLST.
	and a helper class named <<<SystempPropertiesArgumentBuilder>>> for creation of 
	system properties arguments for WLST. 

	The package <<<com.alpha.pineapple.plugin.weblogic.scriptingtool.utils>>> contains
	helper classes for creating Ant objects and validate the module content:
	
	* <<<ScriptHelper>>> is used to resolved the module path and validate the content of
	the module.	
		
	[]