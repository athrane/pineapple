<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:context="http://www.springframework.org/schema/context"
    
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    		http://www.springframework.org/schema/oxm 
    		http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
    		http://www.springframework.org/schema/context 
    		http://www.springframework.org/schema/context/spring-context-3.0.xsd" >
	
	<!-- Configures pineapple-api -->
	<import resource="classpath:com.alpha.pineapple.api-config.xml" />

	<!-- Configures pineapple-commands-api -->
	<import resource="classpath:com.alpha.pineapple.commands-api-config.xml" />

	<!-- Configures pineapple-hamcrest-matchers -->
	<import resource="classpath:com.alpha.pineapple.hamcrest-config.xml" />

	<!-- enable annotation based configuration / dependency injection -->
	<context:annotation-config />

	<!-- define input unmarshalling -->
	<oxm:jaxb2-marshaller id="unmarshaller" contextPath="com.alpha.pineapple.plugin.infrastructure.model"/>

	<!-- define message provider for internationalization  -->
	<bean id="messageProvider" class="com.alpha.pineapple.i18n.PropertyFileMessageProviderImpl">
    	<property name="basename" value="com.alpha.pineapple.plugin.net-messages"/>
	</bean>	
  
	<!-- define support commands -->
	<bean id="invokeHttpGetMethodCommand" class="com.alpha.pineapple.plugin.net.command.InvokeHttpGetMethodCommand" scope="prototype" />		
	<bean id="testResponsePropertiesCommand" class="com.alpha.pineapple.plugin.net.command.TestResponsePropertiesCommand" scope="prototype" />

	<!-- define test commands -->
	<bean id="testTcpConnectionCommand" class="com.alpha.pineapple.plugin.net.command.TestTcpConnectionCommand" scope="prototype" />		
	<bean id="testDnsResolutionCommand" class="com.alpha.pineapple.plugin.net.command.TestDnsResolutionCommand" scope="prototype" />	
	<bean id="testDnsForwardResolutionCommand" class="com.alpha.pineapple.plugin.net.command.TestDnsForwardResolutionCommand" scope="prototype" />	
	<bean id="testDnsReverseResolutionCommand" class="com.alpha.pineapple.plugin.net.command.TestDnsReverseResolutionCommand" scope="prototype" />	
	<bean id="testHttpCommand" class="com.alpha.pineapple.plugin.net.command.TestHttpCommand" scope="prototype" />
	<bean id="testFtpServerActiveCommand" class="com.alpha.pineapple.plugin.net.command.TestFtpServerActiveCommand" scope="prototype" />	
	<bean id="testFtpServerContainsDirectoryCommand" class="com.alpha.pineapple.plugin.net.command.TestFtpServerContainsDirectoryCommand" scope="prototype" />	
	<bean id="testFtpServerCanCreateDirectoryCommand" class="com.alpha.pineapple.plugin.net.command.TestFtpServerCanCreateDirectoryCommand" scope="prototype" />	
	<bean id="testUncPathCommand" class="com.alpha.pineapple.plugin.net.command.TestUncPathCommand" scope="prototype" />	

	<!-- define model mapper -->
	<bean id="assertionConfigurations" class="com.alpha.pineapple.plugin.net.model.TestCaseAssertionConfigurations" />
	<bean id="mapper" class="com.alpha.pineapple.plugin.net.model.MapperImpl" />

	<!-- definition used by the integration tests.  -->
	<bean id="testOperation" class="com.alpha.pineapple.plugin.net.operation.TestOperation" />		
	    
</beans>