 ------
 How-to: Deploy a web application using the WebLogic deployment plugin
 ------
 Allan Thrane Andersen
 ------
 January 2008

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

How-to: Deploy a web application using the WebLogic deployment plugin

* Requirements

	The example requires these preconditions to be run:
	 
	* {{{../../../usage/configure-maven-project.html} Configure a Maven 2.0 
	project to build a Pineapple module.}} 
	
	* Install BEA WebLogic 9.2+ and create a domain named <<<localdomain>>> 
	with a administration server which listens on <<<localhost>>> port 
	<<<7001>>>.       
 
 	[]

* Overview
 	
	Three steps are needed to configure the plugin to work:
	
	* Define <<resource>> which defines access to 
	the WebLogic administration server.
	
	* Define <<credential>> which contains username and password to access the
	WebLogic administration server.
	
	* Add deployment configuration to the Pineapple <<module>> which
	defines how and where the application should be deployed.
	
	[]
			
* Define resource
		
	A <<resource>> defines how a managed resource is accessed in 
	a computing environment. The resource in this case is a WebLogic 
	administration server used for deployment and undeployment.

	The resources are defined in the file <<<$\{user.home}/.pineapple/conf/resources.xml>>>. 
	
	The first step is define an environment in the <<<resources.xml>>> file. 

	Add a new <<<environment>>> named <<localdomain>> to the 
	<<<environments>>> section with an empty <<<resources>>> element.
	
+--------  	
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <environments>
    <environment>
      <identifier>localdomain</identifier>
      <resources/>
    </environment>
  </environments>
</configuration>
+--------  			

 	Add a new <<<resource>>> for the deployment plugin to <<<localdomain>>> 
 	environment which looks like: 

+--------
<configuration>
  <environments>
    <environment>
      <identifier>localdomain</identifier>
      <resources>
        <resource>
          <identifier>weblogic-deployment</identifier>
          <credential-identifier>weblogic-deployment-credential</credential-identifier>
          <factory>
            com.alpha.pineapple.plugin.weblogic.deployment.WeblogicDeploymentFactoryImpl
          </factory>
          <properties>
            <adminserver-protocol>t3</adminserver-protocol>					
            <adminserver-listenaddress>127.0.0.1</adminserver-listenaddress>
            <adminserver-listenport>7001</adminserver-listenport>					
          </properties>
        </resource>									
      </resources>
    </environment>		
  </environments>
</configuration>          				
+--------		 

** Meaning of the elements in the added resource		
	
	* The <<<identifier>>> element identifies the resource in the <<<localdomain>>> 
	so that the resource can be referenced from modules.
	
	* The <<<credential-identifier>>> identifier for the credential which is 
	used to lookup user name and password for this resource.
	
	* The <<<factory>>> element defines the factory class for the plugin. The 
	factory class for the <<WebLogic deployment plugin>> is: 	  	
	<<<com.alpha.pineapple.plugin.weblogic.deployment.WeblogicDeploymentFactoryImpl>>>.
 	 	
	* The <<<properties>>> element defines required properties used by the 
	deployment plugin:
	
		* <<<adminserver-protocol>>> - defines the protocol to access the 
		WebLogic administration server. In this example <<<t3>>> is used. 
	
		* <<<adminserver-listenaddress>>> - defines the server listen address for 
		the WebLogic administration server for the domain that deployments 
		should be targeted to. In this example <<<127.0.0.1>>> is used.
		
		* <<<adminserver-listenport>>> - defines the port that the 
		administration server listens on. In this example <<<7001>>> is used.
		
		[]
		
	[]				
			
** Summary of the example 
			
	The result of defining the resource in the example
	
	* A resource named <<<weblogic-deployment>>> is defined in the 
	<<<localdomain>>> environment.

	*  The <<<factory>>> element of the resource defines that the WebLogic 
	deployment plugin should be used at run time by Pineapple to access the 
	resource.
	
	*  The resource defines how to access a WebLogic server instance by 
	providing connection properties (protocol, port and host 
	name). The connection properties are used by the WebLogic deployment plugin
	to connect to the server.
	
	* The <<<credential identifier>>> element of the resource defines which 
	credential is used to provide security information for the resource to 
	authenticate itself with the WebLogic server. Definition of credentials is 
	described in the next section.       
 
 	[]
 	
* Define credential		 
		 
	A <<credential>> defines authentication information used to access a 
	protected resource. A WebLogic administration server is a protected 
	resource which is protected by a user-id/password. So a credential needs
	to be defined.
	 
	The credentials are defined in the file 
	<<<$\{user.home}/.pineapple/conf/credentials.xml>>>.
	
	Credentials are grouped by environment the same way as resources are. The 
	first step is define an environment in the <<<credentials.xml>>> file.    
		 		
	Add a new <<<environment>>> named <<localdomain>> to the 
	<<<environments>>> section with an empty <<<credentials>>> element.
	
+--------  	
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <environments>
    <environment>
      <identifier>localdomain</identifier>
      <credentials>
    </environment>
  </environments>
</configuration>
+--------  		

 	Add a new <<<credential>>> for the deployment plugin to <<<localdomain>>> 
 	environment which looks like: 
	
+--------
<configuration>
  <environments>
    <environment>
      <identifier>localdomain</identifier>
      <credentials>      
        <credential>
          <identifier>weblogic-deployment-credential</identifier>
          <user>weblogic</user>
          <password>weblogic</password>
        </credential>
      </credentials>
    </environment>		
  </environments>
</configuration>
+--------

	<<Notice:>> The identifier <<<weblogic-deployment-credential>>> is 
	referenced from the resource definition in the <<<resources.xml>>> file.
 	
** Summary of the example 

	The result of defining the credential in the example is:
	
	* A credential named <<<weblogic-deployment-credential>>> is defined in the 
	<<<localdomain>>> environment.
	
	* The credential uses user name/password for authentication. 
	
	* The identifier <<<weblogic-deployment-credential>>> is referenced from 
	the resource definition in the <<<resources.xml>>> file. The sematics of the
	reference is that the resource will use user name/password in the 
	referenced credential to authentication.
		
	
* Add deployment configuration to Pineapple module
 	
	A Pineapple module defines what the different plugins should do in a 
	set of target environments. In the context of the WebLogic deployment plugin, 
	a module should contain the application which should be deployed and 
	information about where the application should be deployed.

	Deployment information is defined in model files:
	<<<\<module-data-dir>/properties/\<environment>.xml>>> where:
	
	* <<<\<module-data-dir>>>> is the module root directory which identifies 
	the module with a unique name and version. 

	* <<<\<environment>.xml>>> is a model file for a target environment,
	with <<<\<environment>>>> substituted with the environment name, e.g. 
	<<<localdomain.xml>>> for an environment named <<<localdomain>>>. In the 
	context of the deployment plugin each model contains deployment targets for 
	the different environments that the an application is deployed to.
	
	[]
	
** Location of the application in the module

	The Maven project is configured to create a ZIP file or an exploded 
	directory structure which contains the module. The application can be found 
	in the directory <<<\<module-data-dir>/app>>>. The deployment plugin will 
	look for here for the application to deploy.  
			
** Specifying deployment targets    	  
	
	If the model file doesn't exist for an environment where the application 
	should be deployed to, then create the file and name it after the target 
	environment, e.g. <<<localdomain.xml>>> for an environment named 
	<<<localdomain>>>. Then add a <<<environment>>> definition to the model 
	file.

	This example shows the basic model file for a <<<localdomain>>> environment
	which is stored in the file <<<localdomain.xml:>>> 
	
+--------  	 
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <environment>
    <description>Deployment to the localdomain environment.</description>
    <resources/>
    </resources>    
  </environment>
</configuration>    
+--------  

	Add a new <<<resource>>> to file:
			
+--------  	 
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <environment>
    <description>Deployment to the localdomain environment.</description>
    <resources>
      <resource identifier="weblogic-deployment" >      	
        <targets>admserver</targets>
      </resource>       
    </resources>    
  </environment>
</configuration>    
+--------  
  
** Summary of the example 

	The result of defining the model file in the example is:
  
	* A model file for deployment in the <<<localdomain>>> environment is 
	defined.
  
	* The application is targeted for deployment to the <<<admserver>>>. 

	[]
  
* Using Pineapple to deploy the application

	Deploy the application by executing the following command:

+--------
mvn com.alpha.pineapple:pineapple-maven-plugin:1.0-SNAPSHOT:install-app -Denvironment=localdomain
+---------

  