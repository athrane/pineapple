
# TestOperation messages
to.start=Starting operation with content object [{0}] containing [{1}].
to.completed=Successfully completed operation.
to.error=Operation failed with exception [{0}]. Operation execution aborted.
to.failed=Operation failed, because [{0}] child executions failed and [{1}] child executions terminated with an error.
to.initialize_session_failed=Initialization of WebLogic edit session failed with exception [{0}] Operation execution aborted.

# DeployConfiguration messages
dc.start=Starting operation with content object [{0}] containing [{1}].
dc.completed=Successfully completed operation.
dc.error=Operation failed with exception [{0}]. Operation execution aborted.
dc.failed=Operation failed, because [{0}] child executions failed and [{1}] child executions terminated with an error.
dc.initialize_session_failed=Initialization of WebLogic edit session failed with exception [{0}] Operation execution aborted.

# UndeployConfiguration messages
uc.start=Starting operation with content object [{0}] containing [{1}].
uc.completed=Successfully completed operation.
uc.error=Operation failed with exception [{0}]. Operation execution aborted.
uc.failed=Operation failed, because [{0}] child executions failed and [{1}] child executions terminated with an error.
uc.initialize_session_failed=Initialization of WebLogic edit session failed with exception [{0}] Operation execution aborted.

# CreateReport messages
cr.start=Starting operation with content object [{0}] containing [{1}].
cr.completed=Successfully completed operation.
cr.error=Operation failed with exception [{0}]. Operation execution aborted.
cr.failed=Operation failed, because [{0}] child executions failed and [{1}] child executions terminated with an error.
cr.initialize_session_failed=Initialization of WebLogic edit session failed with exception [{0}] Operation execution aborted.

# WeblogicJmxEditSessionImpl messages
wjes.not_connected_failure=Failed to access MBean server since session isn't connected.
wjes.connect_start=Starting to connect to resource [{0}] using credential with id [{0}].
wjes.connect_start2=Starting to connect with user [{0}] to host [{1}:{2}] with URL path [{3}].
wjes.connect_completed=Successfully connected to resource [{0}].
wjes.connect_completed2=Successfully connected to WebLogic with service URL [{0}].
wjes.connect_failure=Failed to connect to resource [{0}] due to exception: {1}
wjes.connect_failure2=Failed to connect to with user name [{0}] due to exception: {1}      
wjes.disconnect_failure=Failed to disconnect due to exception: {1}
wjes.startedit_start=Starting to initiate edit session.
wjes.startedit_completed=Successfully initiated edit session.
wjes.connect_editservice=Got the Edit Service MBean [{0}].
wjes.connect_configmgr=Got the Configuration Manager MBean [{0}].
wjes.connect_domain=Got the Domain MBean [{0}].
wjes.attributeinfo_validation_failed=Failed to resolve attribute [{0}] on MBean [{1}] because it did not define meta data for the attribute.
wjes.attribute_readable_validation_failed=Failed to resolve attribute [{0}] on MBean [{1}] because it isn't readable.
wjes.objectname_validation_failed=Failed to validate value having type ObjectName. Value was of type [{0}].
wjes.service_url_info=Will connect using service URL: {0}.

# WeblogicJmxRuntimeSessionImpl messages
wjrs.connect_start=Starting to connect to resource [{0}] using credential with id [{0}].
wjrs.connect_start2=Starting to connect with user [{0}] to host [{1}:{2}] with URL path [{3}].
wjrs.connect_failure=Failed to connect to resource [{0}] due to exception: {1}
wjrs.connect_failure2=Failed to connect to with user name [{0}] due to exception: {1}
wjrs.service_url_info=Will connect using service URL: {0}.
wjrs.connect_completed=Successfully connected to resource [{0}].
wjrs.connect_completed2=Successfully connected to WebLogic with service URL [{0}].
wjrs.disconnect_failure=Failed to disconnect due to exception: {1}

# XmlBeansModelResolverImpl messages
xbmr.resolveattribute_start=Starting to resolve XMLBean attribute [{0}] from [{1}]. 
xbmr.resolveattribute_completed=Successfully resolved XMLBean attribute [{0}].
xbmr.resolveattribute_getter_failed=Failed to resolve XMLBean attribute [{0}] as no getter method could be resolved from XMLBean [{1}].
xbmr.resolveattribute_type_failed=Failed to resolve XMLBean attribute [{0}] as model object type isn't SchemaProperty, but of type [{1}].
xbmr.resolveattribute_type_failed2=Failed to resolve XMLBean attribute [{0}] as no schema property could be resolved from XMLBean [{1}].
xbmr.resolveattribute_value_failed=Failed to resolve XMLBean attribute [{0}] as value isnt of type XMLObject but [{1}].
xbmr.resolvevalue_start=Starting to resolve XMLBean attribute value [{0}] from [{1}].
xbmr.resolvevalue_failed=Failed to resolve value for XMLBean attribute [{0}] as value is neither set, default, or nil.
xbmr.resolvevalue_set_succeed=Successfully resolved SET value [{0}] for XMLBean attribute [{1}].
xbmr.resolvevalue_default_succeed=Successfully resolved DEFAULT value [{0}] for XMLBean attribute [{1}].
xbmr.resolvevalue_nil_succeed=Successfully resolved NIL value [{0}] for XMLBean attribute [{1}].
xbmr.resolvevalue_error=Failed to resolve value for XMLBean attribute [{0}] due to exception [{1}].
xbmr.resolvecollectionvalues_start=Starting to resolve values for XMLBean collection attribute [{0}].
xbmr.resolvecollectionvalues_failed=Failed to resolve value for XMLBean collection attribute [{0}] as type wasn't expected type SchemaProperty.
xbmr.resolvecollectionvalues_completed=Successfully resolved values for XMLBean collection attribute [{0}].
xbmr.resolveattributenames_start=Starting to resolve attributes names for XMLBean [{0}].
xbmr.resolveattributenames_failed=Failed to resolve attribute names for XMLBean [{0}] as primary participant type isn't a schema property.
xbmr.resolveattributenames_completed=Successfully resolved [{0}] attribute names [{1}] for XMLBean [{2}].
xbmr.createnonexistingcollectionvalue_info=Failed to resolve collection value [{0}] from collection which contained the values [{1}].

# XmlBeansModelAccessorImpl messages
xbma.modelobject_start=Starting to get model object from object [{0}] using method [{1}].
xbma.modelobject_hasargs_failed=Failed to get XMLBean model object from parent [{0}] using getter method [{1}] as getter method has arguments.
xbma.modelobject_completed=Successfully retrieved model object [{0}].
xbma.modelobject_error=Failed to get XMLBean model object from parent [{0}] using getter method [{1}] due to exception [{2}].
xbma.isvalueset_info=Value set state [{0}] for attribute [{1}].
xbma.isvalueset_error=Failed to determine whether XMLBean attribute [{0}] on object [{1}] is set due to exception [{2}].
xbma.getdefaultvalue_info=Converting default value [{0}] to type [{1}].
xbma.isnil_info=Value nil state [{0}] for attribute [{1}].
xbma.isnil_error=Failed to determine whether XMLBean attribute [{0}] on object [{1}] is nil due to exception [{2}].
xbma.iscollection_parent_failed=Failed to determine XMLBean type as collection, for [{0}] as parent type isn't a schema property.
xbma.iscollection_child_failed=Failed to determine XMLBean type as collection, for [{0}] as type isn't a schema property.
xbma.isenum_failed=Failed to determine XMLBean type as enum, for [{0}] as type isn't a schema property.
xbma.isprimitive_failed=Failed to determine XMLBean type as primitive, for [{0}] as type isn't a schema property.
xbma.isobject_parent_failed=Failed to determine XMLBean type as object, for [{0}] as parent type isn't a schema property.
xbma.isobject_child_failed=Failed to determine XMLBean type as object, for [{0}] as type isn't a schema property.

# MBeansObjectNameBasedModelResolverImpl messages 
mbonbmr.resolveattribute_start=Starting to resolve MBean attribute [{0}] from [{1}].
mbonbmr.resolveattribute_completed=Successfully resolved MBean attribute [{0}]. 
mbonbmr.resolveattribute_error=Failed to resolve MBean attribute [{0}] due to exception: {1}
mbonbmr.resolveattributenames_start=Starting to resolve attributes names for MBean [{0}].
mbonbmr.resolvecollectionvalues_start=Starting to resolve values for MBean collection attribute [{0}].
mbonbmr.resolvecollectionvalues_completed=Successfully resolved values for MBean collection attribute [{0}].
mbonbmr.createnonexistingcollectionvalue_info=Failed to resolve collection value [{0}] from collection which contained the values [{1}].
mbonbmr.createnonobjectnamecollectionvalue_info=Failed to resolve collection value [{0}] from collection since values wasn't of the type ObjectName.

# MetadataRepositoryImpl messages
mdr.resolvecandidatetype_failed=Candidate type resolution not supported for MBean attribute [{0}].

# ResolvedModelJmxGetter messages
rmjg.resolveobjectname_objname_info=Resolved object name from object name (i.e. no resolution): {0}.
rmjg.resolveobjectname_failed=Failed to resolve object name from [{0}]. Will return null.

# HttpJmxServiceUrlFactory messages
hjsuf.error=Failed to create JMX service URL for protocol [{0}]. Supported protocols are HTTP and HTTPS.

# IiopJmxServiceUrlFactory messages
ijsuf.error=Failed to create JMX service URL for protocol [{0}]. Supported protocols are IIOP and IIOPS.

# T3JmxServiceUrlFactory messages
t3jsuf.error=Failed to create JMX service URL for protocol [{0}]. Supported protocols are T3 and T3S.

# RmiJmxServiceUrlFactory messages
rjsuf.error=Failed to create JMX service URL for protocol [{0}]. Supported protocol is RMI.

# DefaultTraversalDirectorImpl messages
dtd.start=Starting to traverse resolved type [{0}].
dtd.completed=Completed traversing resolved type [{0}].
dtd.error=Traversal failed with exception. Traversal is aborted.

# ResolvedModelBuilderVisitorImpl messages
rmbv.visit_object=Visiting as OBJECT [{0}].
rmbv.visit_primitive=Visiting as PRIMITIVE [{0}].
rmbv.visit_collection=Visiting as COLLECTION [{0}].
rmbv.visit_enum=Visiting as ENUM [{0}].
rmbv.visit_unresolved=Visiting as UNRESOLVED [{0}].
rmbv.visit_resolved=Visiting as RESOLVED [{0}].
rmbv.created_resolvedobject=Created resolved object [{0}].
rmbv.resolvedcollection_error=Failed to resolve collection values due to exception [{0}].
rmbv.resolvedcollection_failed=Failed to resolve collection value [{0}] from collection which contained the values [{1}].
rmbv.resolvedcollection_failed2=Failed to resolve collection value [{0}] from either collections which contained the values [{1}] and [{2}].
rmbv.resolvedcollection_error=Failed to resolve collection value due to exception [{0}].    
rmbv.resolvedobject_error=Failed to resolve object attributes due to exception [{0}].
rmbv.resolvedobject_failed=Failed to successfully resolve attribute from both models which returned the failures [{0}] and [{1}].

# ResolvedModelTesterVisitorImpl messages
rmtv.visit_object=Visiting as OBJECT [{0}].
rmtv.visit_primitive=Visiting as PRIMITIVE [{0}].
rmtv.visit_collection=Visiting as COLLECTION [{0}].
rmtv.visit_enum=Visiting as ENUM [{0}].

# MBeansCreatorVisitorImpl messages
mbcv.visit_object=Visiting as OBJECT [{0}].
mbcv.visit_primitive=Visiting as PRIMITIVE [{0}].
mbcv.visit_collection=Visiting as COLLECTION [{0}].
mbcv.visit_enum=Visiting as ENUM [{0}].

# MBeansDeletorVisitorImpl messages
mbdv.visit_object=Visiting as OBJECT [{0}].
mbdv.visit_primitive=Visiting as PRIMITIVE [{0}].
mbdv.visit_collection=Visiting as COLLECTION [{0}].
mbdv.visit_enum=Visiting as ENUM [{0}].

# MBeansDescriptionGeneratorImpl messages
mbdg.objname_failed=Failed to create message from ObjectName [{0}] since the key property Type isnt defined.

# CreateMBeanCommand messages
cmbc.start=Starting to create MBean.
cmbc.completed=Successfully created MBean.
cmbc.bean_already_exists=Skipped creation of MBean [{0}] since it already exist.    
cmbc.mbean_name_null_failed=Failed to create MBean [{0}] because object name is undefined.
cmbc.mbean_type_null_failed=Failed to create MBean [{0}] because type is undefined.
cmbc.parent_null_failed=Failed to create MBean [{0}] because parent MBean is undefined.
cmbc.parent_secondary_notset_failed=Failed to create MBean [{0}] because parent MBean is undefined.
cmbc.parent_objectname_null_failed=Failed to create MBean [{0}] because parent MBean is undefined.
cmbc.factorymethod_resolution_failed=Failed to create MBean [{0}] because parent MBean [{1}] do not define factory method for attribute [{2}].
cmbc.factorymethod_unsupported_failed=Failed to create MBean [{0}] because creator with 2+ arguments ins't supported..     
cmbc.grandparent_null_failed=Failed to create MBean [{0}] because parent MBean is undefined for collection MBean.
cmbc.succeed=Successfully created MBean with object name [{0}].

# DeleteMBeanCommand messages
dmbc.start=Starting to delete MBean.
dmbc.completed=Successfully deleted MBean.
dmbc.error=Deletion of MBean failed with exception.
dmbc.bean_doesnt_exists=Skipped deletion of MBean [{0}] since it dones't exist. 
dmbc.mbean_name_null_failed=Skipped deletion of MBean [{0}] because object name is undefined.
dmbc.mbean_type_null_failed=Skipped deletion of MBean [{0}] because type is undefined.

# SetMBeanAttributeCommand
smbac.start=Starting to set MBean attribute.
smbac.completed=Successfully set MBean attribute.
smbac.attribute_name_null_failed=Failed to set attribute [{0}] on MBean because attribute name is null.
smbac.parent_null_failed=Failed to set attribute [{0}] because MBean is undefined.
smbac.parent_secondary_notset_failed=Failed to set attribute [{0}] because MBean is undefined.
smbac.objectname_null_failed=Failed to set attribute [{0}] because MBean is undefined.
smbac.mbean_attribute_resolution_failed=Failed to set attribute [{0}] on MBean [{1}] because it did not contain attribute.
smbac.attribute_already_set=Skipped assigning [{0}] to attribute [{1}] because value is already set.
smbac.mbean_attribute_writable_validation_failed=Failed to set attribute [{0}] on MBean [{1}] because it isn't writable.
smbac.convertvalue_failed=Failed to convert attribute value [{0}] from string to a value of type [{1}].
smbac.setvalue_failed=Failed to assign value [{0}] due to exception: {1}.
smbac.convert_value_info=Converted value [{0}] to [{1}]. 
smbac.attributetype_class_failed=Failed to set attribute [{0}] on MBean [{1}] because attribute type is not a class but [{2}].
smbac.convert_value_skipped=Skipped value conversion since source and target types are identical: {0}.
smbac.convert_null_skipped=Skipped value conversion since source value was null.
smbac.succeed=Successfully assigned [{0}] to attribute [{1}].

# Report command
rc.succeed=Successfully executed report command.

# ReadAttributeValueCommand messages
ravc.start=Starting to read attribute value.
ravc.completed=Successfully completed reading attribute value.
ravc.secondary_resolution_failed=Read failed, because resolution of secondary participant failed with exception [{0}].
ravc.succeed=Successfully read the attribute value: {0}={1}. 

# TestObjectIdentityCommand messages
toic.start=Starting object identity test.
toic.completed=Successfully completed object identity test.
toic.primary_resolution_failed=Test failed, because resolution of primary participant failed with exception [{0}].
toic.secondary_resolution_failed=Test failed, because resolution of secondary participant failed with exception [{0}].
toic.null_succeed=Successfully compared object values which where null. 
toic.not_equal_failed=Test failed, because the object values was not equal [{0}] vs. [{1}].
toic.succeed=Successfully compared object values which where [{0}] vs. [{1}].
 
# TestAttributeValueCommand messages
tavc.start=Starting attribute value test.
tavc.completed=Successfully completed attribute value test.
tavc.primary_resolution_failed=Test failed, because resolution of primary participant failed with exception [{0}].
tavc.secondary_resolution_failed=Test failed, because resolution of secondary participant failed with exception [{0}].
tavc.null_succeed=Successfully compared attribute values which where null. 
tavc.not_equal_failed=Test failed, because the attribute values was not equal [{0}] vs. [{1}].
tavc.succeed=Successfully compared attribute values which where [{0}] vs. [{1}]. 
 
# TestCollectionValueCommand messages 
tcvc.start=Starting collection attribute value test.
tcvc.completed=Successfully completed collection attribute value test.
tcvc.primary_resolution_failed=Test failed, because resolution of primary participant failed with exception [{0}].
tcvc.secondary_resolution_failed=Test failed, because resolution of secondary participant failed with exception [{0}].
tcvc.not_collection_failed=Test failed, because model node wasn't an collection, but was [{0}].
tcvc.null_succeed=Successfully compared collection attribute values which where null.
tcvc.not_equal_failed=Test failed, because the collection attribute values wasn't equal [{0}] vs. [{1}].
tcvc.not_equal_length_failed=Test failed, because the collections has different size [{0}] vs. [{1}].
tcvc.succeed=Successfully compared collection attribute values which where [{0}] vs. [{1}].

# TestEnumValueCommand messages
tevc.start=Starting enum value test.
tevc.completed=Successfully completed enum value test.
tevc.primary_resolution_failed=Test failed, because resolution of primary participant failed with exception [{0}].
tevc.secondary_resolution_failed=Test failed, because resolution of secondary participant failed with exception [{0}].
tevc.primary_type_failed= Test failed, because primary participant was not StringEnumAbstractBase but [{0}].
tevc.secondary_type_failed=Test failed, because secondary participant was not string or integer, but [{0}].
tevc.null_succeed=Successfully compared enum values which where null.
tevc.not_equal_failed=Test failed, because the enum attribute values wasn't equal [{0}] vs. [{1}].
tevc.succeed=Successfully compared enum values which where [{0}] vs. [{1}].



