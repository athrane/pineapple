<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
		   xmlns="http://pineapple.dev.java.net/ns/support/docker_1_0" 
		   targetNamespace="http://pineapple.dev.java.net/ns/support/docker_1_0" 
		   elementFormDefault="qualified" 
		   attributeFormDefault="unqualified">

	<xs:element name="containerConfiguration" type="containerConfigurationType" />
	<xs:element name="createdContainer" type="createdContainerType" />
	<xs:element name="listedContainer" type="listedContainerType" />	
	<xs:element name="inspectedContainer" type="inspectedContainerType" />
	<xs:element name="inspectedImage" type="inspectedImageType" />
	<xs:element name="imageCreationInfo" type="imageCreationType" />
	<xs:element name="imageDeletionInfo" type="imageDeletionType" />
	<xs:element name="version" type="versionType" />

	<xs:complexType name="versionType" >
		<xs:annotation>
			<xs:documentation>Info about Docker version.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="version" type="xs:string" use="optional"/>		
		<xs:attribute name="os" type="xs:string" use="optional"/>		
		<xs:attribute name="kernelVersion" type="xs:string" use="optional"/>				
		<xs:attribute name="goVersion" type="xs:string" use="optional"/>				
		<xs:attribute name="gitCommit" type="xs:string" use="optional"/>		
		<xs:attribute name="arch" type="xs:string" use="optional"/>		
		<xs:attribute name="apiVersion" type="xs:string" use="optional"/>		
		<xs:attribute name="experimental" type="xs:string" use="optional"/>		
	</xs:complexType>

	<!-- Image definitions -->

	<xs:complexType name="listedImageType" >
		<xs:annotation>
			<xs:documentation>Info about a listed Docker image (Output from the "List images" operation).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />					
			<xs:element name="repoTags" type="stringList" minOccurs="0" maxOccurs="1" />			
			<xs:element name="repoDigests" type="stringList" minOccurs="0" maxOccurs="1" />			
		</xs:sequence>
		<xs:attribute name="containers" type="xs:integer" use="optional"/>		
		<xs:attribute name="created" type="xs:integer" use="optional"/>				
		<xs:attribute name="id" type="xs:string" use="optional"/>		
		<xs:attribute name="parentId" type="xs:string" use="optional"/>				
		<xs:attribute name="size" type="xs:integer" use="optional"/>		
		<xs:attribute name="sharedSize" type="xs:integer" use="optional"/>				
		<xs:attribute name="virtualSize" type="xs:integer" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="inspectedImageType" >
		<xs:annotation>
			<xs:documentation>Info about an inspected Docker image (Output from the "Inspect an image" operation).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="containerConfig" type="inspectedImageContainerConfigurationType" minOccurs="0" maxOccurs="1" />
			<xs:element name="config" type="inspectedImageConfigurationType" minOccurs="0" maxOccurs="1" />
			<xs:element name="graphDriver" type="graphDriverType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="repoDigests" type="stringList" minOccurs="0" maxOccurs="1" />						
			<xs:element name="repoTags" type="stringList" minOccurs="0" maxOccurs="1" />								
 		</xs:sequence>
		<xs:attribute name="author" type="xs:string" use="optional"/>		
		<xs:attribute name="architecture" type="xs:string" use="optional"/>		
		<xs:attribute name="created" type="xs:string" use="optional"/>		
		<xs:attribute name="comment" type="xs:string" use="optional"/>		
		<xs:attribute name="container" type="xs:string" use="optional"/>
		<xs:attribute name="dockerVersion" type="xs:string" use="optional"/>
		<xs:attribute name="id" type="xs:string" use="optional"/>		
		<xs:attribute name="os" type="xs:string" use="optional"/>		
		<xs:attribute name="parent" type="xs:string" use="optional"/>		
		<xs:attribute name="size" type="xs:long" use="optional"/>	
		<xs:attribute name="virtualSize" type="xs:long" use="optional"/>	
	</xs:complexType>

	<xs:complexType name="inspectedImageContainerConfigurationType" >
		<xs:annotation>
			<xs:documentation>Docker container configuration (Output from inspecting an image).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="cmd" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="dns" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="env" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="entrypoint" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="exposedPorts" type="containerConfigurationExposedPortsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />
			<xs:element name="onBuild" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="portSpecs" type="containerConfigurationHostConfigPortBindingsType" minOccurs="0" maxOccurs="1" />									
			<xs:element name="volumes" type="containerConfigurationVolumesType" minOccurs="0" maxOccurs="1" />						
		</xs:sequence>
		<xs:attribute name="attachStderr" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdout" type="xs:boolean" use="optional"/>		
		<xs:attribute name="domainname" type="xs:string" use="optional"/>		
		<xs:attribute name="hostname" type="xs:string" use="optional"/>		
		<xs:attribute name="image" type="xs:string" use="optional"/>				
		<xs:attribute name="init" type="xs:string" use="optional"/>				
		<xs:attribute name="macAddress" type="xs:string" use="optional"/>				
		<xs:attribute name="networkDisabled" type="xs:boolean" use="optional"/>				
		<xs:attribute name="openStdin" type="xs:boolean" use="optional"/>			
		<xs:attribute name="stdinOnce" type="xs:boolean" use="optional"/>		
		<xs:attribute name="tty" type="xs:boolean" use="optional"/>				
		<xs:attribute name="user" type="xs:string" use="optional"/>		
		<xs:attribute name="volumeDriver" type="xs:string" use="optional"/>		
		<xs:attribute name="volumesFrom" type="xs:string" use="optional"/>		
		<xs:attribute name="workingDir" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="inspectedImageConfigurationType" >
		<xs:annotation>
			<xs:documentation>Docker image configuration (Output from inspecting an image).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="cmd" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="entrypoint" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="env" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="exposedPorts" type="containerConfigurationExposedPortsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />
			<xs:element name="onBuild" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="portSpecs" type="containerConfigurationHostConfigPortBindingsType" minOccurs="0" maxOccurs="1" />									
			<xs:element name="volumes" type="containerConfigurationVolumesType" minOccurs="0" maxOccurs="1" />						
		</xs:sequence>
		<xs:attribute name="attachStderr" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdout" type="xs:boolean" use="optional"/>		
		<xs:attribute name="domainname" type="xs:string" use="optional"/>		
		<xs:attribute name="hostname" type="xs:string" use="optional"/>		
		<xs:attribute name="image" type="xs:string" use="optional"/>				
		<xs:attribute name="init" type="xs:string" use="optional"/>				
		<xs:attribute name="macAddress" type="xs:string" use="optional"/>				
		<xs:attribute name="networkDisabled" type="xs:boolean" use="optional"/>				
		<xs:attribute name="openStdin" type="xs:boolean" use="optional"/>			
		<xs:attribute name="stdinOnce" type="xs:boolean" use="optional"/>		
		<xs:attribute name="tty" type="xs:boolean" use="optional"/>				
		<xs:attribute name="user" type="xs:string" use="optional"/>		
		<xs:attribute name="volumeDriver" type="xs:string" use="optional"/>		
		<xs:attribute name="workingDir" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="imageCreationType" >
		<xs:annotation>
			<xs:documentation>Info about Docker image creation progress.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="progressDetail" type="progressDetailType" minOccurs="0" maxOccurs="1" />
			<xs:element name="errorDetail" type="errorDetailType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="optional"/>		
		<xs:attribute name="status" type="xs:string" use="optional"/>		
		<xs:attribute name="progress" type="xs:string" use="optional"/>		
		<xs:attribute name="error" type="xs:string" use="optional"/>		
		<xs:attribute name="stream" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="imageDeletionType" >
		<xs:annotation>
			<xs:documentation>Info about Docker image deletion progress.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="untagged" type="xs:string" use="optional"/>		
		<xs:attribute name="deleted" type="xs:string" use="optional"/>		
	</xs:complexType>

	<!-- Container definitions -->

	<xs:complexType name="containerConfigurationType" >
		<xs:annotation>
			<xs:documentation>Docker container configuration (Input to container creation).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="cmd" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="env" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="entrypoint" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="exposedPorts" type="containerConfigurationExposedPortsType" minOccurs="0" maxOccurs="1" />						
			<xs:element name="hostConfig" type="containerConfigurationHostConfigType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="onBuild" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="volumes" type="containerConfigurationVolumesType" minOccurs="0" maxOccurs="1" />						
		</xs:sequence>
		<xs:attribute name="attachStderr" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdout" type="xs:boolean" use="optional"/>		
		<xs:attribute name="domainname" type="xs:string" use="optional"/>				
		<xs:attribute name="hostname" type="xs:string" use="optional"/>		
		<xs:attribute name="image" type="xs:string" use="optional"/>				
		<xs:attribute name="macAddress" type="xs:string" use="optional"/>		
		<xs:attribute name="networkDisabled" type="xs:boolean" use="optional"/>				
		<xs:attribute name="openStdin" type="xs:boolean" use="optional"/>			
		<xs:attribute name="stdinOnce" type="xs:boolean" use="optional"/>		
		<xs:attribute name="tty" type="xs:boolean" use="optional"/>				
		<xs:attribute name="user" type="xs:string" use="optional"/>		
		<xs:attribute name="workingDir" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationLabelsType" >
		<xs:annotation>
			<xs:documentation>Info about labels in a container configuration and inspected container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="label" type="containerConfigurationLabelType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationLabelType">
		<xs:annotation>
			<xs:documentation>Label in container configuration and inspected container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="key" type="xs:string" /> <!-- key in map -->
			<xs:element name="value" type="xs:string" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationExposedPortsType">
		<xs:annotation>
			<xs:documentation>Info about exposed ports in a container configuration and inspected container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="port" type="containerConfigurationExposedPortType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationExposedPortType">
		<xs:annotation>
			<xs:documentation>
				Exposed port in container configuration and inspected container.
				The value isn't used by Docker, but a null value (an object) must be defined.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="port" type="xs:string" />
			<xs:element name="nullValue" type="containerConfigurationExposedPortNullValueType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationExposedPortNullValueType">
		<xs:annotation>
			<xs:documentation>Null value for exposed port in container configuration and inspected container.</xs:documentation>
		</xs:annotation>
	</xs:complexType>

	<xs:complexType name="containerConfigurationVolumesType">
		<xs:annotation>
			<xs:documentation>Info about volumes in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="volume" type="containerConfigurationVolumeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationVolumeType">
		<xs:annotation>
			<xs:documentation>
				Volume in container configuration. 
				The value isn't used by Docker, but a null value (an object) must be defined.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mountpoint" type="xs:string" /> <!--  key in map -->
			<xs:element name="nullValue" type="containerConfigurationVolumeNullValueType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationVolumeNullValueType">
		<xs:annotation>
			<xs:documentation>Null value for a volume in container configuration.</xs:documentation>
		</xs:annotation>
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigType" >
		<xs:annotation>
			<xs:documentation>Info about host configuration in a container configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="binds" type="stringList" minOccurs="0" maxOccurs="1" /> 			
			<xs:element name="dns" type="stringList" minOccurs="0" maxOccurs="1" /> 
			<xs:element name="dnsSearch" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="extraHosts" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="groupAdd" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="links" type="stringList" minOccurs="0" maxOccurs="1" />				
			<xs:element name="restartPolicy" type="containerConfigurationHostConfigRestartPolicyType" minOccurs="0" maxOccurs="1" />
			<xs:element name="logConfig" type="containerConfigurationHostConfigLogConfigType" minOccurs="0" maxOccurs="1" />
			<xs:element name="portBindings" type="containerConfigurationHostConfigPortBindingsType" minOccurs="0" maxOccurs="1" />
			<xs:element name="securityOpt" type="stringList" minOccurs="0" maxOccurs="1" />	
			<xs:element name="volumesFrom" type="stringList" minOccurs="0" maxOccurs="1" />				
 		</xs:sequence>
		<xs:attribute name="blkioWeight" type="xs:long" use="optional"/> <!-- Not implemented yet-->		
		<xs:attribute name="containerIDFile" type="xs:string" use="optional"/> <!-- Not implemented yet-->		 		
		<xs:attribute name="capAdd" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="capDrop" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="cgroupParent" type="xs:string" use="optional"/> 		
		<xs:attribute name="consoleSize" type="xs:string" use="optional"/> <!-- Not implemented yet-->		
		<xs:attribute name="cpuShares" type="xs:long" use="optional"/>				
		<xs:attribute name="cpuPeriod" type="xs:long" use="optional"/>				
		<xs:attribute name="cpusetCpus" type="xs:string" use="optional"/>				
		<xs:attribute name="cpusetMems" type="xs:string" use="optional"/>										
		<xs:attribute name="cpuQuota" type="xs:long" use="optional"/> <!-- Not implemented yet-->		
		<xs:attribute name="devices" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="lxcConf" type="xs:string" use="optional"/> <!-- wrong type -->
		<xs:attribute name="ipcMode" type="xs:string" use="optional"/> <!-- wrong type -->						
		<xs:attribute name="networkMode" type="xs:string" use="optional"/> <!-- wrong type -->				
		<xs:attribute name="memory" type="xs:long" use="optional"/>		
		<xs:attribute name="memorySwap" type="xs:long" use="optional"/>		
		<xs:attribute name="memorySwappiness" type="xs:string" use="optional"/> <!-- wrong type -->
		<xs:attribute name="oomKillDisable" type="xs:boolean" use="optional"/> <!-- Not implemented yet-->		
		<xs:attribute name="pidMode" type="xs:string" use="optional"/> <!-- wrong type -->				
		<xs:attribute name="privileged" type="xs:boolean" use="optional"/>				
		<xs:attribute name="publishAllPorts" type="xs:boolean" use="optional"/>		
		<xs:attribute name="readonlyRootfs" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="ulimits" type="xs:string" use="optional"/> <!-- wrong type -->						
		<xs:attribute name="utsMode" type="xs:string" use="optional"/> <!-- wrong type -->				

	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigPortBindingsType" >
		<xs:annotation>
			<xs:documentation>Port bindings configuration in container host configuration and container inspection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="binding" type="containerConfigurationHostConfigPortBindingType" minOccurs="0" maxOccurs="unbounded" />
 		</xs:sequence>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigPortBindingType">
		<xs:annotation>
			<xs:documentation>Port binding configuration in container host configuration and container inspection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="containerPort" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="value" type="containerConfigurationHostConfigPortBindingValueType" minOccurs="0" maxOccurs="unbounded" />						
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigPortBindingValueType">
		<xs:annotation>
			<xs:documentation>Port binding value in container host configuration and container inspection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="hostPort" type="xs:string" />
			<xs:element name="hostIp" type="xs:string" /> <!-- hostIP is only used for container inspection -->
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigLogConfigType" >
		<xs:annotation>
			<xs:documentation>
				Info about log configuration from container configuration and inspected container.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="config" type="containerConfigurationHostConfigLogConfigConfigType" />
 		</xs:sequence>		
		<xs:attribute name="type" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigLogConfigConfigType" >
		<xs:annotation>
			<xs:documentation>
				Info about detailed log configuration from container configuration and inspected container.
			</xs:documentation>
		</xs:annotation>
	</xs:complexType>

	<xs:complexType name="containerConfigurationHostConfigRestartPolicyType" >
		<xs:annotation>
			<xs:documentation>
				Info about restart policy from container configuration and inspected container.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="maximumRetryCount" type="xs:string" use="optional"/>		
		<xs:attribute name="name" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="createdContainerType" >
		<xs:annotation>
			<xs:documentation>Info about created Docker container (Output from container creation).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="warnings" type="stringList" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="optional"/>		
	</xs:complexType>

	<!-- 
		Corresponds to Container  
		in docker/engine-api/types/types.go	
		https://github.com/docker/docker/blob/ce255f76c70a77c21d48ebd407d83cad55edf883/vendor/src/github.com/docker/engine-api/types/types.go
	 -->
	<xs:complexType name="listedContainerType" >
		<xs:annotation>
			<xs:documentation>Info about a listed Docker container (Output from listing containers).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="hostConfig" type="inspectedContainerHostConfigType" minOccurs="0" maxOccurs="1" />							
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="names" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="networkSettings" type="inspectedContainerNetworkSettingsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="mounts" type="listedContainerMountType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="ports" type="listedContainerPortType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="command" type="xs:string" use="optional"/>		
		<xs:attribute name="created" type="xs:int" use="optional"/> 			
		<xs:attribute name="id" type="xs:string" use="optional"/>		
		<xs:attribute name="imageId" type="xs:string" use="optional"/>						
		<xs:attribute name="image" type="xs:string" use="optional"/>				
		<xs:attribute name="sizeRw" type="xs:int" use="optional"/> 					
		<xs:attribute name="sizeRootFs" type="xs:int" use="optional"/> 							
		<xs:attribute name="state" type="xs:string" use="optional"/>				
		<xs:attribute name="status" type="xs:string" use="optional"/>				
	</xs:complexType>

	<xs:complexType name="listedContainerPortType" >
		<xs:annotation>
			<xs:documentation>Info about a port from a listed container.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ip" type="xs:string" use="optional"/>				
		<xs:attribute name="privatePort" type="xs:string" use="optional"/>		
		<xs:attribute name="publicPort" type="xs:string" use="optional"/>		
		<xs:attribute name="type" type="xs:string" use="optional"/>		
	</xs:complexType>

	<!-- 
		Corresponds to MountPoint   
		in docker/engine-api/types/types.go	
		https://github.com/docker/docker/blob/ce255f76c70a77c21d48ebd407d83cad55edf883/vendor/src/github.com/docker/engine-api/types/types.go						
	 -->
	<xs:complexType name="listedContainerMountType">
		<xs:annotation>
			<xs:documentation>Mounts in listed container.</xs:documentation>
		</xs:annotation>		
		<xs:attribute name="destination" type="xs:string" use="optional"/>								
		<xs:attribute name="driver" type="xs:string" use="optional"/>								
		<xs:attribute name="mode" type="xs:string" use="optional"/>								
		<xs:attribute name="name" type="xs:string" use="optional"/>										
		<xs:attribute name="propagation " type="xs:string" use="optional"/>								
		<xs:attribute name="source" type="xs:string" use="optional"/>										
		<xs:attribute name="rw" type="xs:boolean" use="optional"/>										
	</xs:complexType>

	<!-- 
		Corresponds to ContainerJSONBase  
		in docker/engine-api/types/types.go	
		https://github.com/docker/docker/blob/ce255f76c70a77c21d48ebd407d83cad55edf883/vendor/src/github.com/docker/engine-api/types/types.go	
	 -->
	<xs:complexType name="inspectedContainerType" >
		<xs:annotation>
			<xs:documentation>Info about an inspected Docker container (Output from inspecting a container).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="args" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="config" type="inspectedContainerConfigurationType" minOccurs="0" maxOccurs="1" />  <!-- gone in current source/rest1.23, but not in 1.9 -->
			<xs:element name="execIDs" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="graphDriver" type="inspectedContainerGraphDriverType" minOccurs="0" maxOccurs="1" />									
			<xs:element name="hostConfig" type="inspectedContainerHostConfigType" minOccurs="0" maxOccurs="1" />
			<xs:element name="mounts" type="inspectedContainerMountsType" minOccurs="0" maxOccurs="unbounded" />	<!-- gone in current source/rest1.23, but not in 1.9 -->											
			<xs:element name="networkSettings" type="inspectedContainerNetworkSettingsType" minOccurs="0" maxOccurs="1" /> <!-- gone in current source/rest1.23, but not in 1.9 -->
			<xs:element name="state" type="inspectedContainerStateType" minOccurs="0" maxOccurs="1" />
			<xs:element name="volumes" type="inspectedContainerVolumesType" minOccurs="0" maxOccurs="1" /> <!--  also defined in container.config.volumes --> <!-- gone in current source/rest1.23, but not in 1.9 -->
			<xs:element name="volumesRW" type="inspectedContainerVolumesRwType" minOccurs="0" maxOccurs="1" />
			<xs:element name="volumesRelabel" type="inspectedContainerVolumesRelabelType" minOccurs="0" maxOccurs="1" />
 		</xs:sequence>
		<xs:attribute name="appArmorProfile" type="xs:string" use="optional"/>		
		<xs:attribute name="created" type="xs:string" use="optional"/>		
		<xs:attribute name="driver" type="xs:string" use="optional"/>			
		<xs:attribute name="execDriver" type="xs:string" use="optional"/>	
		<xs:attribute name="hostnamePath" type="xs:string" use="optional"/>	
		<xs:attribute name="hostsPath" type="xs:string" use="optional"/>	
		<xs:attribute name="id" type="xs:string" use="optional"/>		  
		<xs:attribute name="image" type="xs:string" use="optional"/>	
		<xs:attribute name="logPath" type="xs:string" use="optional"/>					
		<xs:attribute name="name" type="xs:string" use="optional"/>	
		<xs:attribute name="mountLabel" type="xs:string" use="optional"/>	
		<xs:attribute name="path" type="xs:string" use="optional"/>		
		<xs:attribute name="processLabel" type="xs:string" use="optional"/>	
		<xs:attribute name="restartCount" type="xs:long" use="optional"/>	
		<xs:attribute name="resolvConfPath" type="xs:string" use="optional"/>	
		<xs:attribute name="sysInitPath" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="inspectedContainerConfigurationType" >
		<xs:annotation>
			<xs:documentation>Docker container configuration (Partial output from container inspection).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="cmd" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="entrypoint" type="stringList" minOccurs="0" maxOccurs="1" />			
			<xs:element name="env" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="exposedPorts" type="containerConfigurationExposedPortsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="labels" type="containerConfigurationLabelsType" minOccurs="0" maxOccurs="1" />		
			<xs:element name="onBuild" type="stringList" minOccurs="0" maxOccurs="1" />							
			<xs:element name="portSpecs" type="containerConfigurationHostConfigPortBindingsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="volumes" type="containerConfigurationVolumesType" minOccurs="0" maxOccurs="1"/>	<!--  also defined in container.volumes -->					
		</xs:sequence>
		<xs:attribute name="attachStderr" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="attachStdout" type="xs:boolean" use="optional"/>		
		<xs:attribute name="domainname" type="xs:string" use="optional"/>				
		<xs:attribute name="hostname" type="xs:string" use="optional"/>		
		<xs:attribute name="image" type="xs:string" use="optional"/>				
		<xs:attribute name="init" type="xs:string" use="optional"/>		
		<xs:attribute name="macAddress" type="xs:string" use="optional"/>		
		<xs:attribute name="memory" type="xs:long" use="optional"/>		
		<xs:attribute name="memorySwap" type="xs:long" use="optional"/>		
		<xs:attribute name="networkDisabled" type="xs:boolean" use="optional"/>				
		<xs:attribute name="openStdin" type="xs:boolean" use="optional"/>		
		<xs:attribute name="stdinOnce" type="xs:boolean" use="optional"/>		
		<xs:attribute name="tty" type="xs:boolean" use="optional"/>				
		<xs:attribute name="user" type="xs:string" use="optional"/>		
		<xs:attribute name="volumeDriver" type="xs:string" use="optional"/>		
		<xs:attribute name="workingDir" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="inspectedContainerStateType" >
		<xs:annotation>
			<xs:documentation>Info about the state of a Docker container (Partial output from container inspection).</xs:documentation>
		</xs:annotation>
		<xs:attribute name="dead" type="xs:string" use="optional"/>		
		<xs:attribute name="error" type="xs:string" use="optional"/>		
		<xs:attribute name="exitCode" type="xs:int" use="optional"/>		
		<xs:attribute name="finishedAt" type="xs:string" use="optional"/>				
		<xs:attribute name="oomKilled" type="xs:boolean" use="optional"/>				
		<xs:attribute name="paused" type="xs:boolean" use="optional"/>				
		<xs:attribute name="pid" type="xs:int" use="optional"/>		
		<xs:attribute name="restarting" type="xs:boolean" use="optional"/>		
		<xs:attribute name="running" type="xs:boolean" use="optional"/>		
		<xs:attribute name="startedAt" type="xs:string" use="optional"/>	
		<xs:attribute name="status" type="xs:string" use="optional"/>			
	</xs:complexType>

	<xs:complexType name="inspectedContainerNetworkSettingsType" >
		<xs:annotation>
			<xs:documentation>Info about the network configuration of a Docker container (Partial output from inspecting a container).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ports" type="containerConfigurationExposedPortsType" minOccurs="0" maxOccurs="1" />
			<xs:element name="networks" type="inspectedContainerNetworkSettingsNetworksType" minOccurs="0" maxOccurs="1" />			
 		</xs:sequence>
		<xs:attribute name="bridge" type="xs:string" use="optional"/>		
		<xs:attribute name="endpointId" type="xs:string" use="optional"/>				
		<xs:attribute name="gateway" type="xs:string" use="optional"/>		
		<xs:attribute name="globalIPv6Address" type="xs:string" use="optional"/>
		<xs:attribute name="globalIPv6PrefixLen" type="xs:long" use="optional"/>
		<xs:attribute name="hairpinMode" type="xs:string" use="optional"/>				
		<xs:attribute name="ipAddress" type="xs:string" use="optional"/>		
		<xs:attribute name="ipPrefixLen" type="xs:long" use="optional"/>
		<xs:attribute name="ipv6Gateway" type="xs:string" use="optional"/>
		<xs:attribute name="linkLocalIPv6Address" type="xs:string" use="optional"/>
		<xs:attribute name="linkLocalIPv6PrefixLen" type="xs:long" use="optional"/>		
		<xs:attribute name="macAddress" type="xs:string" use="optional"/>		
		<xs:attribute name="networkId" type="xs:string" use="optional"/>				
		<xs:attribute name="portMapping" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="sandboxKey" type="xs:string" use="optional"/>				
		<xs:attribute name="sandboxId" type="xs:string" use="optional"/>						
		<xs:attribute name="secondaryIPAddresses" type="xs:string" use="optional"/> <!-- wrong type -->
		<xs:attribute name="secondaryIPv6Addresses" type="xs:long" use="optional"/> <!-- wrong type -->
	</xs:complexType>

	<!-- 
		Corresponds to HostConfig   
		in docker/engine-api/types/container/host_config.go	
		https://github.com/docker/docker/blob/ce255f76c70a77c21d48ebd407d83cad55edf883/vendor/src/github.com/docker/engine-api/types/container/host_config.go	
	 -->
	<xs:complexType name="inspectedContainerHostConfigType" >
		<xs:annotation>
			<xs:documentation>Info about the host configuration of a Docker container (Partial output from inspecting a container).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="binds" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="consoleSize" type="intList" minOccurs="0" maxOccurs="1" /> 						
			<xs:element name="devices" type="stringList" minOccurs="0" maxOccurs="1" />
			<xs:element name="dns" type="stringList" minOccurs="0" maxOccurs="1" /> 
			<xs:element name="dnsSearch" type="stringList" minOccurs="0" maxOccurs="1" /> 
			<xs:element name="dnsOptions" type="stringList" minOccurs="0" maxOccurs="1" /> 			
			<xs:element name="extraHosts" type="stringList" minOccurs="0" maxOccurs="1" /> 
			<xs:element name="groupAdd" type="stringList" minOccurs="0" maxOccurs="1" /> 
			<xs:element name="links" type="stringList" minOccurs="0" maxOccurs="1" /> 						
			<xs:element name="logConfig" type="containerConfigurationHostConfigLogConfigType" minOccurs="0" maxOccurs="1" />
			<xs:element name="lxcConf" type="stringList" minOccurs="0" maxOccurs="1" />			
			<xs:element name="portBindings" type="containerConfigurationHostConfigPortBindingsType" minOccurs="0" maxOccurs="1" />			
			<xs:element name="restartPolicy" type="containerConfigurationHostConfigRestartPolicyType" minOccurs="0" maxOccurs="1" />
			<xs:element name="securityOpt" type="stringList" minOccurs="0" maxOccurs="1" /> 			
			<xs:element name="volumesFrom" type="stringList" minOccurs="0" maxOccurs="1" /> 			
 		</xs:sequence>
		<xs:attribute name="autoRemove" type="xs:boolean" use="optional"/>		 		 		
		<xs:attribute name="blkioWeight" type="xs:long" use="optional"/>		 		
		<xs:attribute name="capAdd" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="capDrop" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="cgroup" type="xs:string" use="optional"/> <!-- approximation of the CgroupSpec which is implemented as a string -->		
		<xs:attribute name="cgroupParent" type="xs:string" use="optional"/> 		
		<xs:attribute name="containerIDFile" type="xs:string" use="optional"/>				
		<xs:attribute name="cpuShares" type="xs:long" use="optional"/>				
		<xs:attribute name="cpuPeriod" type="xs:long" use="optional"/>				
		<xs:attribute name="cpuQuota" type="xs:long" use="optional"/>						
		<xs:attribute name="cpusetCpus" type="xs:string" use="optional"/>						
		<xs:attribute name="cpusetMems" type="xs:string" use="optional"/>						
		<xs:attribute name="ipcMode" type="xs:string" use="optional"/>		
		<xs:attribute name="kernelMemory" type="xs:long" use="optional"/>										
		<xs:attribute name="memory" type="xs:long" use="optional"/>		
		<xs:attribute name="memoryReservation" type="xs:long" use="optional"/>										
		<xs:attribute name="memorySwap" type="xs:long" use="optional"/>								
		<xs:attribute name="memorySwappiness" type="xs:long" use="optional"/>										
		<xs:attribute name="mountRun" type="xs:boolean" use="optional"/>		
		<xs:attribute name="networkMode" type="xs:string" use="optional"/>	  <!-- wrong type in rest1.23 -->	
		<xs:attribute name="oomKillDisable" type="xs:boolean" use="optional"/> 
		<xs:attribute name="pidMode" type="xs:string" use="optional"/>						
		<xs:attribute name="privileged" type="xs:boolean" use="optional"/>				
		<xs:attribute name="publishAllPorts" type="xs:boolean" use="optional"/>		
		<xs:attribute name="readonlyRootfs" type="xs:string" use="optional"/> <!-- wrong type -->		
		<xs:attribute name="ulimits" type="xs:string" use="optional"/> <!-- wrong type -->				
		<xs:attribute name="utsMode" type="xs:string" use="optional"/> 				
		<xs:attribute name="volumeDriver" type="xs:string" use="optional"/> 						
	</xs:complexType>

	<xs:complexType name="inspectedContainerGraphDriverType">
		<xs:annotation>
			<xs:documentation>Graph driver in inspected container.</xs:documentation>
		</xs:annotation>		
		<xs:sequence>
			<xs:element name="data" type="inspectedContainerGraphDriverDataType" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>								
	</xs:complexType>

	<xs:complexType name="inspectedContainerGraphDriverDataType">
		<xs:annotation>
			<xs:documentation>Data type for graph driver in inspected container.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="deviceId" type="xs:string" use="optional"/>						
		<xs:attribute name="deviceName" type="xs:string" use="optional"/>						
		<xs:attribute name="DeviceSize" type="xs:string" use="optional"/>								
	</xs:complexType>

	<xs:complexType name="inspectedContainerMountsType">
		<xs:annotation>
			<xs:documentation>Mounts in inspected container.</xs:documentation>
		</xs:annotation>		
		<xs:sequence>
			<xs:element name="data" type="inspectedContainerGraphDriverDataType" />
		</xs:sequence>
		<xs:attribute name="destination" type="xs:string" use="optional"/>								
		<xs:attribute name="driver" type="xs:string" use="optional"/>								
		<xs:attribute name="mode" type="xs:string" use="optional"/>								
		<xs:attribute name="name" type="xs:string" use="optional"/>										
		<xs:attribute name="source" type="xs:string" use="optional"/>								
		<xs:attribute name="rw" type="xs:string" use="optional"/>										
	</xs:complexType>

	<xs:complexType name="inspectedContainerVolumesType" >
		<xs:annotation>
			<xs:documentation>Info about volumes from a container inspection info.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="volume" type="inspectedContainerVolumeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="inspectedContainerVolumeType">
		<xs:annotation>
			<xs:documentation>Volume in inspected container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mountpoint" type="xs:string" /> <!-- key in map -->
			<xs:element name="path" type="xs:string" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="inspectedContainerVolumesRwType" >
		<xs:annotation>
			<xs:documentation>Info about volumes RW from a container inspection info.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="volume" type="inspectedContainerVolumeRwType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>		
	</xs:complexType>

	<xs:complexType name="inspectedContainerVolumeRwType">
		<xs:annotation>
			<xs:documentation>Volume RW property in inspected container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mountpoint" type="xs:string" /> <!--  key in map -->
			<xs:element name="enabled" type="xs:boolean" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="inspectedContainerVolumesRelabelType" >
		<xs:annotation>
			<xs:documentation>Info about volumes relabeling from a container inspection info.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="volume" type="inspectedContainerVolumeRelabelType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>				
	</xs:complexType>

	<xs:complexType name="inspectedContainerVolumeRelabelType">
		<xs:annotation>
			<xs:documentation>Volume relabel property in inspected container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mountpoint" type="xs:string" /> <!-- key in map -->
			<xs:element name="label" type="xs:string" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="inspectedContainerNetworkSettingsNetworksType" >
		<xs:annotation>
			<xs:documentation>Info about networks from a container network settings inspection info. (container/map).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="network" type="inspectedContainerNetworkSettingsNetworkType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- 
		Corresponds to NetworkingConfig 
		in docker/engine-api/types/network/network.go	
		https://github.com/docker/docker/blob/3d13fddd2bc4d679f0eaa68b0be877e5a816ad53/vendor/src/github.com/docker/engine-api/types/network/network.go		
	 -->

	<xs:complexType name="inspectedContainerNetworkSettingsNetworkType">
		<xs:annotation>
			<xs:documentation>Info about a network from a container network settings inspection info. (key/value in map)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="key" type="xs:string" /> <!-- key in map -->
			<xs:element name="value" type="inspectedContainerNetworkSettingsNetworkValueType" />
		</xs:sequence>
	</xs:complexType>

	<!-- 
		Corresponds to EndpointSettings 
		in docker/engine-api/types/network/network.go	
		https://github.com/docker/docker/blob/3d13fddd2bc4d679f0eaa68b0be877e5a816ad53/vendor/src/github.com/docker/engine-api/types/network/network.go		
	 -->
	<xs:complexType name="inspectedContainerNetworkSettingsNetworkValueType">
		<xs:annotation>
			<xs:documentation>Info about a network from a container network settings inspection info. (value in map)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="links" type="stringList" minOccurs="0" maxOccurs="1" />				
			<xs:element name="aliases" type="stringList" minOccurs="0" maxOccurs="1" />							
		</xs:sequence>		
		<xs:attribute name="endpointId" type="xs:string" use="optional"/>										
		<xs:attribute name="gateway" type="xs:string" use="optional"/>												
		<xs:attribute name="globalIpv6Address" type="xs:string" use="optional"/>										
		<xs:attribute name="globalIpv6PrefixLen" type="xs:int" use="optional"/>				
		<xs:attribute name="ipamConfig" type="xs:string" use="optional"/>																				
		<xs:attribute name="ipAddress" type="xs:string" use="optional"/>										
		<xs:attribute name="ipPrefixLen" type="xs:int" use="optional"/>										
		<xs:attribute name="ipv6Gateway" type="xs:string" use="optional"/>										
		<xs:attribute name="macAddress" type="xs:string" use="optional"/>	
		<xs:attribute name="networkID" type="xs:string" use="optional"/>													
	</xs:complexType>

	<!-- Generic definitions -->

	<xs:complexType name="progressDetailType" >
		<xs:annotation>
			<xs:documentation>Detailed info about progress during image creation.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="start" type="xs:string" use="optional"/>		
		<xs:attribute name="current" type="xs:string" use="optional"/>		
		<xs:attribute name="total" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="errorDetailType" >
		<xs:annotation>
			<xs:documentation>Detailed info about errors during image creation.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="code" type="xs:int" use="optional"/>		
		<xs:attribute name="message" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="graphDriverType" >
		<xs:annotation>
			<xs:documentation>Docker Graph driver configuration (Output from inspecting an image or container).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="data" type="graphDriverDataType" minOccurs="0" maxOccurs="1" />						
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:complexType name="graphDriverDataType" >
		<xs:annotation>
			<xs:documentation>Docker graph driver data configuration (Output from inspecting an image or container).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="key" type="xs:string" /> <!-- key in map -->
			<xs:element name="value" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	
	<xs:simpleType name="stringList">
  		<xs:list itemType="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="intList">
  		<xs:list itemType="xs:int"/>
	</xs:simpleType>
														
</xs:schema>
